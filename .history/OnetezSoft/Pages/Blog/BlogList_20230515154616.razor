@page "/blogs"
@inject IJSRuntime JSRuntime
@inject NavigationManager navigation

<PageTitle>@_title</PageTitle>

<section class="p-4">
  <div class="card p-5">
    <ul class="columns is-multiline is-variable is-2">
      <li class="column is-full">
        <h1 class="title is-5 has-text-info">
          TIÊU ĐIỂM
        </h1>
      </li>
      @for (int i = 0; i < count; i++)
      {
        if (i >= dataList.Count) break;
        var item = dataList[i];
        var link = string.IsNullOrEmpty(item.link) ? $"/blogs/{item.id}" : item.link;
        var target = string.IsNullOrEmpty(item.link) ? "_self" : "_blank";

        <li class="column is-one-fifth">
          <a class="image is-4by5 is_radius" href="@link" target="@target">
            <img src="@item.image" alt="img" />
          </a>
          <h3 class="has-text-weight-bold text_2_line mt-3 mb-2">
            <a href="@link" target="@target">@item.name</a>
          </h3>
          <div class="has-text-grey text_2_line">
            @item.desc
          </div>
          <a class="is-italic" href="@link" target="@target">Đọc tiếp</a>
        </li>
      }
      @if (count < dataList.Count)
      {
        <li class="column is-full has-text-centered pt-3">
          <a class="has-text-weight-semibold" @onclick="() => count += 5">Xem thêm</a>
        </li>
      }
    </ul>
  </div>
</section>

@code {
  [CascadingParameter]
  public LayoutMain Layout { get; set; }

  private string _title = "Tin tức";

  private List<BlogModel> dataList = new();
  private int count = 10;

  protected override async Task OnInitializedAsync()
  {
    var database = await DbBlog.GetList(Layout.Company.id, null);
    dataList = database.Where(x => Layout.User.departments_id.Contains(x.department) 
        || x.department == null).ToList();
  }
}