@page "/educate/course/manager"
@inject IJSRuntime JSRuntime
@inject NavigationManager navigation

<PageTitle>@_title</PageTitle>

@if (!string.IsNullOrEmpty(_message))
{
  <div id="notify">
    <div class="notification is-@(_success ? "success" : "danger")">
      <button class="delete" @onclick="() => _message = string.Empty"></button>
      <p>@((MarkupString)_message)</p>
    </div>
  </div>
}

<section class="p-4 @(_loaded ? "" : "is-loading")">
  <div class="card p-5">
    <ul class="columns is-vcentered is-variable is-2 mb-3">
      <li class="column">
        <h1 class="title is-5 has-text-info is-uppercase">
          @_title
        </h1>
      </li>
      <li class="column is-narrow">
        <a class="button is-link" href="/educate/course/manager/add">
          <span class="icon">
            <span class="material-icons-outlined is-size-6">add</span>
          </span>
          <span>Tạo khóa học</span>
        </a>
      </li>
    </ul>
    <ul class="columns is-variable is-2 mb-3">
      <li class="column">
        <input @bind="filterKeyword" type="text" class="input" placeholder="Từ khóa: tiêu đề..." />
      </li>
      <li class="column is-one-quarter">
        <div class="field has-addons">
          <div class="control">
            <label class="button is-static">Danh mục</label>
          </div>
          <div class="control is-expanded">
            <div class="select is-fullwidth">
              <select @bind="filterCategory">
                <option value="">Tất cả</option>
                @foreach (var sl in categoryList)
                {
                  <option value="@sl.id">@sl.name</option>
                }
              </select>
            </div>
          </div>
        </div>
      </li>
      <li class="column is-one-quarter">
        <div class="field has-addons">
          <div class="control">
            <label class="button is-static">Tìm theo</label>
          </div>
          <div class="control is-expanded">
            <div class="select is-fullwidth">
              <select @bind="filterCreator">
                <option value="true">Khóa học bạn đã tạo</option>
                <option value="false">Khóa học bạn giảng dạy</option>
                @if (Layout.User.role == 1 || (Layout.User.role == 2 && Layout.User.role_manage.educate))
                {
                  <option value="">Tất cả khóa học trong hệ thống</option>
                }
              </select>
            </div>
          </div>
        </div>
      </li>
      <li class="column is-narrow">
        <a class="button is-link is-outlined" @onclick="Search">
          <span class="icon">
            <i class="material-icons-outlined">search</i>
          </span>
          <span>Tìm kiếm</span>
        </a>
      </li>
    </ul>
    <ul class="columns is-multiline">
      @foreach (var item in dataList)
      {
        var link = "/educate/course/manager/info/" + item.id;
        var teacher = Layout.UserList.SingleOrDefault(x => x.id == item.teacher);
        var review = Shared.Review(item.reviews.Select(x => x.point).Sum(), item.reviews.Count);

        <li class="column is-one-third">
          <div class="card has_image">
            <div class="card-image">
              <a class="image is-5by3" href="@link">
                <img src="@item.image" alt="IMG">
                @if (!item.show)
                {
                  <div class="tags">
                    <span class="tag is-dark">Đang ẩn</span>
                  </div>
                }
              </a>
            </div>
            <div class="card-content p-4 font_13 has-text-grey">
              <ul class="columns is-multiline is-mobile is-vcentered is-variable is-1">
                <li class="column is-11">
                  <a class="is-size-6 has-text-weight-bold text_1_line" href="@link">
                    @item.name
                  </a>
                </li>
                <li class="column is-1">
                  <a class="icon" title="Chỉnh sửa" href="/educate/course/manager/edit/@item.id">
                    <i class="material-icons-outlined is-size-5">edit</i>
                  </a>
                </li>
                @if (teacher != null)
                {
                  <li class="column is-full">
                    <span class="has-text-grey">Giảng viên:</span>
                    <strong class="has-text-link">@teacher.FullName</strong>
                  </li>
                }
                <li class="column is-full">
                  <span class="icon-text">
                    <span class="has-text-grey">Đánh giá:</span>
                    <span class="ml-2">@review.ToString("0.0")</span>
                    <span class="icon has-text-warning">
                      <i class="material-icons-outlined is-size-6">star</i>
                    </span>
                    <span class="has-text-grey">(@item.reviews.Count lượt)</span>
                  </span>
                </li>
                <li class="column is-one-third px-0">
                  <div class="icon-text">
                    <span class="icon">
                      <i class="material-icons is-size-6">book</i>
                    </span>
                    <span>@item.lesson bài học</span>
                  </div>
                </li>
                <li class="column is-one-third px-0">
                  <div class="icon-text">
                    <span class="icon">
                      <i class="material-icons is-size-6">timer</i>
                    </span>
                    <span>@item.time</span>
                  </div>
                </li>
                <li class="column is-one-third px-0">
                  <div class="icon-text">
                    <span class="icon">
                      <i class="material-icons is-size-6">people_alt</i>
                    </span>
                    <span>@item.learned đã học</span>
                  </div>
                </li>
              </ul>
            </div>
          </div>
        </li>
      }
      @if (dataList.Count == 0)
      {
        <li class="column is-full has-text-grey py-6">
          Không tìm thấy dữ liệu
        </li>
      }
    </ul>
  </div>
</section>

@if(!CheckAccess())
{
  <div class="modal is-active">
    <div class="modal-background"></div>
    <div class="modal-content" style="max-width: 360px;">
      <div class="box has-text-centered pt-5">
        <span class="icon is-large has-text-danger">
          <i class="material-icons-outlined is-size-1">error_outline</i>
        </span>
        <div class="is-size-6 py-4 has-text-weight-semibold">
          @msgAccess
        </div>
      </div>
    </div>
  </div>
}

@code {
  [CascadingParameter]
  public LayoutMain Layout { get; set; }

  private bool _loaded = false;
  private bool _success = false;
  private string _message = string.Empty;
  private string _title = "Quản lý khóa học";

  private List<EducateCourseModel> dataList = new();
  private List<EducateCategoryModel> categoryList = new();

  private string filterKeyword = string.Empty;
  private string filterCategory = string.Empty;
  private string filterCreator = "false";

  protected override async Task OnInitializedAsync()
  {
    categoryList.AddRange(DbEducateCategory.GetList(Layout.Company.id, null));
    await Search();
    _loaded = true;
  }

  protected override void OnAfterRender(bool firstRender)
  {
    _message = string.Empty;
  }

  private string msgAccess = string.Empty;
  private bool CheckAccess()
  {
    return ProductService.CheckAccess(Layout.Company, Layout.User, "train", out msgAccess);
  }

  private async Task Search()
  {
    if (string.IsNullOrEmpty(filterCreator))
    {
      dataList = await DbEducateCourse.GetList(Layout.Company.id, filterKeyword, filterCategory, null, null);
    }
    else
    {
      var creator = filterCreator == "true" ? Layout.User.id : "";
      var teacher = filterCreator == "false" ? Layout.User.id : "";
      dataList = await DbEducateCourse.GetList(Layout.Company.id, filterKeyword, filterCategory, creator, teacher);
    }
  }
}