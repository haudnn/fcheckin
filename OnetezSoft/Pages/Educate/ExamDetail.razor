@page "/educate/exam/manager/{Id}"
@inject IJSRuntime JSRuntime
@inject NavigationManager navigation

<PageTitle>@_title</PageTitle>

@if (!string.IsNullOrEmpty(_message))
{
  <div id="notify">
    <div class="notification is-@(_success ? "success" : "danger")">
      <button class="delete" @onclick="() => _message = string.Empty"></button>
      <p>@((MarkupString)_message)</p>
    </div>
  </div>
}

<section class="p-4 @(_loaded ? "" : "is-loading")">
  @if (current != null)
  {
    <div class="card p-5">
      <ul class="columns is-vcentered is-variable is-2 mb-3">
        <li class="column">
          <h1 class="title is-5 has-text-info is-uppercase">
            @_title
          </h1>
        </li>
        <li class="column is-narrow">
          <a class="button is-link is-outlined" href="/educate/exam/manager">
            <span class="icon"><i class="material-icons-outlined">arrow_back</i></span>
            <span>Quay lại</span>
          </a>
        </li>
      </ul>
      <ul class="columns is-multiline is-vcentered is-variable is-2">
        <li class="column is-half">
          <div class="text_1_line">
            <span class="has-text-grey">Khóa học:</span>
            <span class="has-text-weight-semibold">@current.course_name</span>
          </div>
        </li>
        <li class="column is-half">
          <div class="text_1_line">
            <span class="has-text-grey">Bài thi:</span>
            <span class="has-text-weight-semibold">@current.lesson_name</span>
          </div>
        </li>
        <li class="column is-one-quarter">
          <div class="user_item">
            <span class="has-text-grey" style="flex-grow: 0;">Học viên:</span>
            @if (student != null)
            {
              <img class="image is-24x24 mx-2" src="@student.avatar" alt="IMG" />
              <span class="has-text-weight-semibold">@student.FullName</span>
            }
            else
            {
              <span class="has-text-weight-semibold">@current.user</span>
            }
          </div>
        </li>
        <li class="column is-one-quarter">
          <span class="has-text-grey">Ngày nộp bài:</span>
          <span class="has-text-weight-semibold">@string.Format("{0:dd/MM/yyyy, HH:mm}", new DateTime(current.date))</span>
        </li>
        <li class="column is-one-quarter">
          <span class="has-text-grey">Mức điểm đạt:</span>
          <span class="has-text-weight-semibold">@current.point_pass</span>
        </li>
        <li class="column is-one-quarter">
          @if (current.check)
          {
            <span class="has-text-grey">Kết quả:</span>
            <span class="has-text-weight-semibold has-text-@(current.point_exam >= current.point_pass ? "success" : "danger")">
              @(current.point_exam >= current.point_pass ? "THI ĐẠT" : "KHÔNG ĐẠT")
            </span>
          }
        </li>
      </ul>
      <hr />
      <ul class="lesson_question">
        @for (int i = 0; i < current.questions.Count; i++)
        {
          var item = current.questions[i];
          <li class="question_item">
            <div class="has-text-info has-text-weight-semibold mb-2">
              <span>@string.Format("Câu {0}: ", i + 1)</span>
              <span class="has_link">@((MarkupString)Shared.GetLinks(item.content))</span>
            </div>
            <div class="mb-2">
              <span class="has-text-info has-text-weight-semibold mr-2">Trả lời:</span>
              @if (!string.IsNullOrEmpty(item.answer))
              {
                <span>@((MarkupString)item.answer.Replace("\n", "<br />"))</span>
              }
              else
              {
                <i>Không có câu trả lời</i>
              }
            </div>
            <div class="field is-grouped">
              <div class="control is-expanded">
                <label class="label">Nhận xét câu trả lời</label>
                <div class="control">
                  <input @bind="item.comment" type="text" class="input is_bg" placeholder="Nhận xét của giảng viên về câu trả lời..." />
                </div>
              </div>
              <div class="control" style="width: 120px;">
                <label class="label">Chấm điểm</label>
                <div class="field has-addons">
                  <div class="control" style="width: 60px;">
                    <input @bind="item.point_exam" type="number" class="input has-text-right"
                       min="0" max="@item.point_max" />
                  </div>
                  <div class="control is-expanded">
                    <div class="button is-static is-fullwidth">/ @item.point_max</div>
                  </div>
                </div>
              </div>
            </div>
            <hr class="has-background-grey-lighter" />
          </li>
        }
      </ul>
      <div class="field is-grouped">
        <div class="control is-expanded">
          <label class="label">Nhận xét cả bài thi</label>
          <div class="control">
            <textarea @bind="current.comment" class="textarea is_bg" rows="3" placeholder="Nhận xét của giảng viên về bài thi..." />
          </div>
        </div>
        <div class="control" style="width: 120px;">
          <label class="label">Điểm bài thi</label>
          <div class="field has-addons">
            <div class="control" style="width: 60px;">
              <input value="@current.questions.Select(x => x.point_exam).Sum()" class="input has-text-centered" readonly />
            </div>
            <div class="control is-expanded">
              <div class="button is-static is-fullwidth">/ @current.point_max</div>
            </div>
          </div>
          <div class="control">
            <a class="button is-link is-fullwidth" @onclick="Update">
              <span class="icon">
                <i class="material-icons-outlined is-size-6">done</i>
              </span>
              <span>Lưu kết quả</span>
            </a>
          </div>
        </div>
      </div>
    </div>
  }
  else
  {
    <div class="card p-5">
      <h1 class="title is-5 has-text-info is-uppercase">
        @_title
      </h1>
      <div class="py-6 has-text-grey">
        Dữ liệu không tồn tại hoặc đã bị xóa !
      </div>
    </div>
  }
</section>

@code {
  [CascadingParameter]
  public LayoutMain Layout { get; set; }

  [Parameter]
  public string Id { get; set; }

  private bool _loaded = false;
  private bool _success = false;
  private string _message = string.Empty;
  private string _title = "Chấm bài thi";

  private EducateExamModel current = null;
  private EducateLearnedModel learned = null;
  private UserModel student = null;

  protected override async Task OnInitializedAsync()
  {
    current = await DbEducateExam.Get(Layout.Company.id, Id);
    if (current != null)
    {
      student = await DbUser.Get(Layout.Company.id, current.user);
      learned = await DbEducateLearned.Get(Layout.Company.id, current.learned);
    }

    _loaded = true;
  }

  protected override void OnAfterRender(bool firstRender)
  {
    _message = string.Empty;
  }

  private async Task Update()
  {
    _success = false;
    if (learned != null)
    {
      if (current.questions.Where(x => x.point_exam > x.point_max).Count() > 0)
      {
        _message = "Điểm của câu hỏi không được cao hơn số điểm tối đa !";
        await Task.Delay(5000);
        _message = string.Empty;
      }
      else
      {
        current.point_exam = current.questions.Select(x => x.point_exam).Sum();
        current.check = true;
        current = await DbEducateExam.Update(Layout.Company.id, current);

        // Cập nhật kỳ học
        var learn = learned.lessons.SingleOrDefault(x => x.id == current.lesson);
        learn.done = true;
        learn.pass = current.point_exam >= current.point_pass;
        learned = await DbEducateLearned.Update(Layout.Company.id, learned);

        _message = "Đã lưu kết quả chấm bài thi";
        _success = true;

        // Gửi thông báo chuông
        await DbNotify.Create(Layout.Company.id, 603, current.id, current.user, Layout.User.id);
      }
    }
    else
    {
      _message = "Không tìm thấy thông tin kỳ học của học viên !";
      await Task.Delay(5000);
      _message = string.Empty;
    }
  }
}