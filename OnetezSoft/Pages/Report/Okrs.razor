@page "/reports/okrs"
@inject IJSRuntime JSRuntime
@inject NavigationManager navigation

<PageTitle>@_title</PageTitle>

<section class="columns is-gapless has_menu_left @(_loaded ? "" : "is-loading")">
  <div class="column is-narrow">
    <_MenuLeft Company="Layout.Company" User="Layout.User" />
  </div>
  <div class="column">
    <div class="card p-5">
      <ul class="columns is-vcentered is-variable is-2 mb-3">
        <li class="column">
          <h1 class="title is-5 has-text-info">
            TIẾN ĐỘ OKRs
          </h1>
        </li>
        <li class="column is-narrow">
          <div class="dropdown is-right @(progressDepartmentShow ? "is-active" : "")">
            <div class="dropdown-trigger">
              <a class="icon-text" @onclick="() => progressDepartmentShow = !progressDepartmentShow">
                <span class="has-text-link">
                  @progressDepartment.name.Replace("└─", "").Replace("'", "")
                </span>
                <span class="icon">
                  <i class="material-icons-outlined is-size-5">arrow_drop_down</i>
                </span>
              </a>
            </div>
            <div class="dropdown-menu">
              <div class="dropdown-content">
                <a class="dropdown-item is-family-code" @onclick="() => ProgressChangeDepartment(null)">
                  Tất cả phòng ban
                </a>
                @foreach (var sl in departments)
                {
                  <a class="dropdown-item is-family-code" @onclick="() => ProgressChangeDepartment(sl)">
                    @((MarkupString)sl.name.Replace("'", "&nbsp;"))
                  </a>
                }
              </div>
            </div>
          </div>
        </li>
        <li class="column is-one-quarter">
          <div class="control has-icons-right has_suggest">
            <input class="input is-rounded" type="text" placeholder="Nhập tên nhân viên..."
                   autocomplete="off" @bind="ProgressUserSearch" @bind:event="oninput" />
            <ul class="suggest">
              @foreach (var item in progressUserSuggests)
              {
                <li class="rsitem" @onclick="() => ProgressUserSelected(item)">
                  <div class="user_item">
                    <img class="image is-24x24 mr-2" src="@item.avatar" alt="IMG">
                    <span>@item.FullName</span>
                  </div>
                </li>
              }
            </ul>
            <span class="icon is-right">
              <i class="material-icons-outlined">search</i>
            </span>
          </div>
        </li>
      </ul>
      <div class="scrolly pr-2" style="max-height: 400px">
        <table class="table is-fullwidth is-vcentered is-noborder is-responsive mt-3">
          <tbody>
            @foreach (var item in progressList)
            {
              var showOKRs = showOkrs.Contains(item.id);
              var progressColor = Shared.ProgressColor(item.value);
              var okrList = progressOkrs.Where(x => x.user_create == item.id).ToList();
              <tr>
                <td>
                  <div class="user_item">
                    <img class="image is-36x36 mr-2" src="@item.avatar" alt="IMG">
                    <div>
                      <p class="has-text-weight-semibold has-text-info is-size-6">
                        @item.name
                      </p>
                      <p class="text_1_line has-text-grey is-size-7" style="width: 280px;">
                        @item.departments
                      </p>
                    </div>
                  </div>
                </td>
                <td colspan="2" width="350px">
                  <label class="td-label">Tiến độ</label>
                  <div class="td-value">
                    <div class="progress_has_value">
                      <progress class="progress is-small @progressColor" value="@Convert.ToInt32(item.value)" max="100"></progress>
                      <span class="@progressColor.Replace("is-", "has-text-")">
                        @Shared.ConvertNumber(item.value)%
                      </span>
                    </div>
                  </div>
                </td>
                <td class="td-hide" width="100px">
                </td>
                <td width="100px" align="center">
                  <label class="td-label">Chi tiết</label>
                  <div class="td-value">
                    <a class="icon-text has-text-info" @onclick="() => ShowOKRs(item.id)">
                      <span class="has-text-weight-semibold">@okrList.Count</span>
                      <span class="ml-1">OKRs</span>
                      <span class="icon">
                        <i class="material-icons-outlined is-size-5">
                          @(showOKRs ? "arrow_drop_down" : "arrow_right")
                        </i>
                      </span>
                    </a>
                  </div>
                </td>
              </tr>
              if (showOKRs)
              {
                <tr class="tr-hide">
                  <td>Mục tiêu</td>
                  <td width="175px">Kết Quả Then Chốt</td>
                  <td width="175px" align="center">Tiến độ</td>
                  <td align="center">Thay đổi</td>
                  <td align="center">Tự tin</td>
                </tr>
                @foreach (var okr in okrList)
                {
                  var confident = DbOkr.Confident(okr.confident);
                  var showKey = showKeys.Contains(okr.id);
                  var progress = DbOkr.GetProgress(okr.key_results);
                  var okrColor = Shared.ProgressColor(progress);

                  <tr>
                    <td>
                      <label class="td-label">Mục tiêu</label>
                      <div class="td-value">
                        <div class="is-flex">
                          <a class="has-text-weight-semibold has-text-link" href="/cfr/checkin/@okr.id/overview">
                            @okr.name
                          </a>
                          @if (okr.done)
                          {
                            <span class="ml-1 icon" title="OKRs đã hoàn thành">
                              <i class="material-icons is-size-6 has-text-success">check_circle</i>
                            </span>
                          }
                        </div>
                      </div>
                    </td>
                    <td>
                      <label class="td-label">Kết quả</label>
                      <div class="td-value">
                        <a class="icon-text has-text-weight-semibold has-text-info" @onclick="() => ShowKeys(okr.id)">
                          <span>@okr.key_results.Count kết quả</span>
                          <span class="icon">
                            <i class="material-icons-outlined is-size-5">
                              @(showKey ? "arrow_drop_down" : "arrow_right")
                            </i>
                          </span>
                        </a>
                      </div>
                    </td>
                    <td>
                      <label class="td-label">Tiến độ</label>
                      <div class="td-value">
                        <div class="progress_has_value">
                          <progress class="progress is-small @okrColor" value="@progress" max="100"></progress>
                          <span>@Shared.ConvertNumber(progress)%</span>
                        </div>
                      </div>
                    </td>
                    <td class="td-half" align="center">
                      <label class="td-label">Thay đổi</label>
                      <div class="td-value has-text-weight-semibold">
                        @Shared.ConvertNumber(progress - okr.progress_prev)%
                      </div>
                    </td>
                    <td class="td-half" align="center">
                      <label class="td-label">Tự tin</label>
                      <div class="td-value has-text-weight-semibold">
                        <span class="@confident.color">@confident.name</span>
                      </div>
                    </td>
                  </tr>

                  if (showKey)
                  {
                    foreach (var kr in okr.key_results)
                    {
                      var confidentKr = DbOkr.Confident(kr.confident);
                      <tr class="font_13">
                        <td class="pl-4">
                          @kr.name
                        </td>
                        <td class="pl-2">
                          <a class="icon-text has-text-link" @onclick="() => ShowTask(okr, kr)">
                            <span class="icon is-small">
                              <i class="material-icons-outlined">task</i>
                            </span>
                            <span>Hành động</span>
                          </a>
                          @if (!string.IsNullOrEmpty(kr.link))
                          {
                            <a class="icon-text has-text-link" href="@kr.link" target="_blank">
                              <span class="icon is-small">
                                <i class="material-icons-outlined">attach_file</i>
                              </span>
                              <span>Kết quả</span>
                            </a>
                          }
                        </td>
                        <td>
                          <label class="td-label">Đạt được</label>
                          <div class="td-value">
                            <span class="has-text-success" title="@string.Format("{0:0,0}/{1:0,0}", kr.result, kr.target)">
                              @Shared.ConvertNumber(kr.result)/@Shared.ConvertNumber(kr.target)
                            </span>
                            <span class="is-pulled-right">@kr.unit</span>
                          </div>
                        </td>
                        <td align="center">
                          <label class="td-label">Thay đổi</label>
                          <div class="td-value">
                            @Shared.ConvertNumber(Shared.Progress(kr.change, kr.target))%
                          </div>
                        </td>
                        <td align="center">
                          <label class="td-label">Tự tin</label>
                          <div class="td-value has-text-weight-semibold">
                            <span class="@confidentKr.color">@confidentKr.name</span>
                          </div>
                        </td>
                      </tr>
                    }
                  }
                }
              }
            }
          </tbody>
        </table>
      </div>
    </div>

    <div class="card p-5">
      <ul class="columns is-vcentered is-variable is-2 mb-3">
        <li class="column">
          <div class="dropdown is-hoverable">
            <div class="dropdown-trigger">
              <div class="icon-text">
                <h1 class="title is-5 has-text-info">
                  BẢNG XẾP HẠNG OKRs
                </h1>
                <span class="icon has-text-info">
                  <i class="material-icons-outlined is-size-5">info</i>
                </span>
              </div>
            </div>
            <div class="dropdown-menu">
              <div class="dropdown-content">
                <div class="dropdown-item">
                  Xếp hạng tính theo trung bình cộng tỉ lệ hoàn thành OKRs của từng cá nhân.
                </div>
              </div>
            </div>
          </div>
        </li>
        <li class="column is-narrow">
          <div class="dropdown is-right @(rankDepartmentShow ? "is-active" : "")">
            <div class="dropdown-trigger">
              <a class="icon-text" @onclick="() => rankDepartmentShow = !rankDepartmentShow">
                <span class="has-text-link">
                  @rankDepartment.name.Replace("└─", "").Replace("'", "")
                </span>
                <span class="icon">
                  <i class="material-icons-outlined is-size-5">arrow_drop_down</i>
                </span>
              </a>
            </div>
            <div class="dropdown-menu">
              <div class="dropdown-content">
                <a class="dropdown-item is-family-code" @onclick="() => RankChangeDepartment(null)">
                  Tất cả phòng ban
                </a>
                @foreach (var sl in departments)
                {
                  <a class="dropdown-item is-family-code" @onclick="() => RankChangeDepartment(sl)">
                    @((MarkupString)sl.name.Replace("'", "&nbsp;"))
                  </a>
                }
              </div>
            </div>
          </div>
        </li>
      </ul>
      <ul class="columns is-variable is-8 rank_top">
        @for (int i = 0; i < 3; i++)
        {
          if (i < rankList.Count)
          {
            var item = rankList[i];
            <li class="column is-one-third">
              <div class="has-text-centered pb-3 mb-3 is-relative">
                <div class="title">@(i+1)</div>
                <div class="subtitle">
                  @Shared.ConvertNumber(item.value)%
                </div>
              </div>
              <div class="user_item">
                <img class="image is-36x36 mr-3" src="@item.avatar" alt="IMG">
                <div>
                  <strong class="is-block is-size-6 has-text-info">@item.name</strong>
                  <span class="text_1_line has-text-grey is-size-7" style="width: 240px;">
                    @item.departments
                  </span>
                </div>
              </div>
            </li>
          }
        }
      </ul>
      <div class="scrolly pr-2 mt-5 rank_list" style="max-height: 280px;">
        <ul class="columns is-multiline is-variable is-2">
          @for (int i = 3; i < rankList.Count; i++)
          {
            if (i < rankList.Count)
            {
              var item = rankList[i];

              <li class="column is-half px-6">
                <ul class="columns is-vcentered is-variable is-2 is-mobile">
                  <li class="column is-1 is-size-6">#@(i+1)</li>
                  <li class="column is-9">
                    <div class="user_item">
                      <img class="image is-36x36 mr-3" src="@item.avatar" alt="IMG">
                      <div>
                        <strong class="is-block is-size-6 has-text-info">@item.name</strong>
                        <span class="text_1_line has-text-grey is-size-7" style="width: 240px;">
                          @item.departments
                        </span>
                      </div>
                    </div>
                  </li>
                  <li class="column is-2 has-text-right has-text-info has-text-weight-semibold">
                    @Shared.ConvertNumber(item.value)%
                  </li>
                </ul>
              </li>
            }
          }
        </ul>
      </div>
    </div>

    <div class="card p-5">
      <ul class="columns is-vcentered is-variable is-2 mb-3">
        <li class="column">
          <h1 class="title is-5 has-text-info">
            TỔNG QUAN OKRs
          </h1>
        </li>
        <li class="column is-narrow">
          <div class="dropdown is-right @(chartDepartmentShow ? "is-active" : "")">
            <div class="dropdown-trigger">
              <a class="icon-text" @onclick="() => chartDepartmentShow = !chartDepartmentShow">
                <span class="has-text-link">
                  @chartDepartment.name.Replace("└─", "").Replace("'", "")
                </span>
                <span class="icon">
                  <i class="material-icons-outlined is-size-5">arrow_drop_down</i>
                </span>
              </a>
            </div>
            <div class="dropdown-menu">
              <div class="dropdown-content">
                <a class="dropdown-item is-family-code" @onclick="() => ChartChangeDepartment(null)">
                  Tất cả phòng ban
                </a>
                @foreach (var sl in departments)
                {
                  <a class="dropdown-item is-family-code" @onclick="() => ChartChangeDepartment(sl)">
                    @((MarkupString)sl.name.Replace("'", "&nbsp;"))
                  </a>
                }
              </div>
            </div>
          </div>
        </li>
        <li class="column is-one-quarter">
          <div class="control has-icons-right has_suggest">
            <input class="input is-rounded" type="text" placeholder="Nhập tên nhân viên..."
                   autocomplete="off" @bind="ChartUserSearch" @bind:event="oninput" />
            <ul class="suggest">
              @foreach (var item in chartUserSuggests)
              {
                <li class="rsitem" @onclick="() => ChartUserSelected(item)">
                  <div class="user_item">
                    <img class="image is-24x24 mr-2" src="@item.avatar" alt="IMG">
                    <span>@item.FullName</span>
                  </div>
                </li>
              }
            </ul>
            <span class="icon is-right">
              <i class="material-icons-outlined">search</i>
            </span>
          </div>
        </li>
      </ul>
      <div class="field is-grouped is-grouped-multiline">
        <div class="control has-text-weight-semibold">
          Chọn thông tin hiển thị:
        </div>
        <div class="control">
          <a class="icon-text" @onclick="() => ChartChangeView(0)">
            <span class="icon is-size-5">
              @if (chartOkrProgress)
              {
                <i class="material-icons-outlined">check_box</i>
              }
              else
              {
                <i class="material-icons-outlined">check_box_outline_blank</i>
              }
            </span>
            <span>O - Tiến độ</span>
          </a>
        </div>
        <div class="control">
          <a class="icon-text" @onclick="() => ChartChangeView(1)">
            <span class="icon is-size-5">
              @if (chartOkrConfident)
              {
                <i class="material-icons-outlined">check_box</i>
              }
              else
              {
                <i class="material-icons-outlined">check_box_outline_blank</i>
              }
            </span>
            <span>O - Tự tin</span>
          </a>
        </div>
        <div class="control">
          <a class="icon-text" @onclick="() => ChartChangeView(2)">
            <span class="icon is-size-5">
              @if (chartKrProgress)
              {
                <i class="material-icons-outlined">check_box</i>
              }
              else
              {
                <i class="material-icons-outlined">check_box_outline_blank</i>
              }
            </span>
            <span>KRs - Tiến độ</span>
          </a>
        </div>
        <div class="control">
          <a class="icon-text" @onclick="() => ChartChangeView(3)">
            <span class="icon is-size-5">
              @if (chartKrConfident)
              {
                <i class="material-icons-outlined">check_box</i>
              }
              else
              {
                <i class="material-icons-outlined">check_box_outline_blank</i>
              }
            </span>
            <span>KRs - Tự tin</span>
          </a>
        </div>
      </div>
      <ul class="columns is-multiline is-variable is-2">
        @foreach (var item in chartList)
        {
          <li class="column is-full pt-5">
            <h2 class="title is-6 has-text-info">@item.Value</h2>
          </li>
          <li class="@(chartOkrProgress ? "column is-half pl-6" : "is-hidden")">
            <div style="height: 150px;">
              <canvas id="chartOkrProgress_@item.Key" height="150"></canvas>
            </div>
            <div class="has-text-weight-semibold pt-2 pl-6 ml-4">O - Tiến độ</div>
          </li>
          <li class="@(chartOkrConfident ? "column is-half pl-6" : "is-hidden")">
            <div style="height: 150px;">
              <canvas id="chartOkrConfident_@item.Key" height="150"></canvas>
            </div>
            <div class="has-text-weight-semibold pt-2 pl-6 ml-4">O - Tự tin</div>
          </li>
          <li class="@(chartKrProgress ? "column is-half pl-6" : "is-hidden")">
            <div style="height: 150px;">
              <canvas id="chartKrProgress_@item.Key" height="150"></canvas>
            </div>
            <div class="has-text-weight-semibold pt-2 pl-6 ml-4">KRs - Tiến độ</div>
          </li>
          <li class="@(chartKrConfident ? "column is-half pl-6" : "is-hidden")">
            <div style="height: 150px;">
              <canvas id="chartKrConfident_@item.Key" height="150"></canvas>
            </div>
            <div class="has-text-weight-semibold pt-2 pl-6 ml-4">KRs - Tự tin</div>
          </li>
        }
      </ul>
    </div>
  </div>
</section>

<TaskPopup Okr="taskOkr" Kr="taskKr" />

@code {
  [CascadingParameter]
  public LayoutMain Layout { get; set; }

  private bool _loaded = false;
  private string _title = "Thống kê OKRs";

  private List<DepartmentModel> departmentAll = new();
  private List<DepartmentModel.SelectList> departments = new();

  protected override async Task OnInitializedAsync()
  {
    departmentAll = DbDepartment.GetAll(Layout.Company.id);
    departments.AddRange(DbDepartment.GetSelectList(Layout.Company.id, null, 0, null));

    DepartmentModel.SelectList department = null;
    if (!string.IsNullOrEmpty(Layout.User.department_default))
      department = departments.SingleOrDefault(x => x.id == Layout.User.department_default);

    ProgressChangeDepartment(department);
    RankChangeDepartment(department);
    await ChartChangeDepartment(department);

    _loaded = true;
  }

  protected override void OnAfterRender(bool firstRender)
  {
    taskOkr = null;
    taskKr = null;
  }


  #region Tiến độ OKRs

  private List<ProgressModel> progressList = new();
  private List<OkrModel> progressOkrs = new();
  private List<string> progressUserList = new();
  private List<UserModel> progressUserSuggests = new();
  private DepartmentModel.SelectList progressDepartment = new() { name = "Tất cả phòng ban" };
  private string progressUserSearch = string.Empty;
  private bool progressDepartmentShow = false;
  private List<string> showOkrs = new();
  private List<string> showKeys = new();
  private OkrModel taskOkr = null;
  private OkrModel.KeyResult taskKr = null;

  private void ProgressChangeDepartment(DepartmentModel.SelectList item)
  {
    progressDepartmentShow = false;
    progressUserSuggests = new();
    progressUserSearch = string.Empty;
    progressDepartment = item != null ? item : new() { name = "Tất cả phòng ban" };
    if (item == null)
      progressUserList = (from x in Layout.UserList select x.id).ToList();
    else
      progressUserList = (from x in Layout.UserList
                          where x.departments_id.Contains(progressDepartment.id)
                          select x.id).ToList();
    GetProgressList();
  }

  private string ProgressUserSearch
  {
    get => progressUserSearch;
    set
    {
      progressUserSearch = value;
      progressDepartmentShow = false;
      progressUserSuggests = new();
      if (!string.IsNullOrEmpty(value))
      {
        foreach (var item in Layout.UserList)
        {
          bool check = true;
          if (!string.IsNullOrEmpty(progressDepartment.id))
            if (item.departments_id == null || !item.departments_id.Contains(progressDepartment.id))
              check = false;
          if (!Handled.Shared.SearchKeyword(progressUserSearch, item.FullName))
            check = false;

          if (check)
            progressUserSuggests.Add(item);
        }
      }
    }
  }

  private void ProgressUserSelected(UserModel item)
  {
    progressUserSuggests = new();
    progressUserSearch = item.FullName;
    progressUserList = new() { item.id };
    GetProgressList();
  }

  private void GetProgressList()
  {
    progressList.Clear();
    progressOkrs = DbOkr.GetList(Layout.Company.id, Layout.CycleId, progressUserList);
    foreach (var userId in progressUserList)
    {
      var user = Layout.UserList.SingleOrDefault(x => x.id == userId);
      if (user != null)
      {
        double totalProgress = 0;
        var okrList = progressOkrs.Where(x => x.user_create == user.id).ToList();
        foreach (var okr in okrList)
        {
          totalProgress += DbOkr.GetProgress(okr.key_results);
        }

        progressList.Add(new ProgressModel()
          {
            id = user.id,
            name = user.FullName,
            avatar = user.avatar,
            departments = user.departments_name,
            value = totalProgress > 0 ? totalProgress / okrList.Count : 0
          });
      }
    }
    progressList = progressList.OrderByDescending(x => x.value).ToList();
  }

  private void ShowOKRs(string id)
  {
    if (showOkrs.Contains(id))
      showOkrs.Remove(id);
    else
      showOkrs.Add(id);
  }

  private void ShowKeys(string id)
  {
    if (showKeys.Contains(id))
      showKeys.Remove(id);
    else
      showKeys.Add(id);
  }

  private void ShowTask(OkrModel okr, OkrModel.KeyResult kr)
  {
    taskOkr = okr;
    taskKr = kr;
  }

  #endregion


  #region Bảng xếp hạng

  private List<ProgressModel> rankList = new();
  private List<string> rankUserList = new();
  private DepartmentModel.SelectList rankDepartment = new() { name = "Tất cả phòng ban" };
  private bool rankDepartmentShow = false;

  private void RankChangeDepartment(DepartmentModel.SelectList item)
  {
    rankDepartmentShow = false;
    rankDepartment = item != null ? item : new() { name = "Tất cả phòng ban" };
    if (item == null)
      rankUserList = (from x in Layout.UserList select x.id).ToList();
    else
      rankUserList = (from x in Layout.UserList
                      where x.departments_id.Contains(rankDepartment.id)
                      select x.id).ToList();
    GetRankList();
  }

  private void GetRankList()
  {
    rankList.Clear();
    var rankOkrList = DbOkr.GetList(Layout.Company.id, Layout.CycleId, rankUserList);
    foreach (var userId in rankUserList)
    {
      var user = Layout.UserList.SingleOrDefault(x => x.id == userId);
      if (user != null)
      {
        double totalProgress = 0;
        var okrList = progressOkrs.Where(x => x.user_create == user.id).ToList();
        foreach (var okr in okrList)
        {
          totalProgress += DbOkr.GetProgress(okr.key_results);
        }

        rankList.Add(new ProgressModel()
          {
            id = user.id,
            name = user.FullName,
            avatar = user.avatar,
            departments = user.departments_name,
            value = totalProgress > 0 ? totalProgress / okrList.Count : 0
          });
      }
    }
    rankList = rankList.OrderByDescending(x => x.value).ToList();
  }


  #endregion


  #region Tổng quan OKRs

  Dictionary<string, string> chartList = new();
  private List<UserModel> chartUserSuggests = new();
  private DepartmentModel.SelectList chartDepartment = new() { name = "Tất cả phòng ban" };
  private string chartUserSearch = string.Empty;
  private string chartUserId = string.Empty;
  private bool chartDepartmentShow = false;
  private bool chartOkrProgress = true;
  private bool chartOkrConfident = false;
  private bool chartKrProgress = false;
  private bool chartKrConfident = false;

  private void ChartChangeView(int index)
  {
    if (index == 0)
      chartOkrProgress = !chartOkrProgress;
    else if (index == 1)
      chartOkrConfident = !chartOkrConfident;
    else if (index == 2)
      chartKrProgress = !chartKrProgress;
    else if (index == 3)
      chartKrConfident = !chartKrConfident;
  }

  private async Task ChartChangeDepartment(DepartmentModel.SelectList item)
  {
    chartDepartmentShow = false;
    if (item == null)
      chartDepartment = new() { name = "Tất cả phòng ban" };
    else
      chartDepartment = item;

    chartUserId = string.Empty;
    chartUserSearch = string.Empty;
    chartUserSuggests = new();

    await GetChartList();
  }

  private string ChartUserSearch
  {
    get => chartUserSearch;
    set
    {
      chartUserSearch = value;
      chartUserSuggests = new();
      if (!string.IsNullOrEmpty(value))
      {
        foreach (var item in Layout.UserList)
        {
          bool check = true;
          if (!string.IsNullOrEmpty(progressDepartment.id))
            if (item.departments_id == null || !item.departments_id.Contains(progressDepartment.id))
              check = false;
          if (!Handled.Shared.SearchKeyword(progressUserSearch, item.FullName))
            check = false;

          if (check)
            chartUserSuggests.Add(item);
        }
      }
    }
  }

  private async Task ChartUserSelected(UserModel item)
  {
    chartUserId = item.id;
    chartUserSearch = item.FullName;
    chartUserSuggests = new();
    await GetChartList();
  }

  private async Task GetChartList()
  {
    chartList.Clear();

    if (!string.IsNullOrEmpty(chartUserId))
    {
      chartList.Add(chartUserId, chartUserSearch);
      await ChartDepartment(chartUserId, new List<string>() { chartUserId });
    }
    else if (!string.IsNullOrEmpty(chartDepartment.id))
    {
      var department = departmentAll.SingleOrDefault(x => x.id == chartDepartment.id);
      if (department != null)
      {
        chartList.Add(department.id, department.name);
        await ChartDepartment(department.id, department.members_id);

        var childs = departmentAll.Where(x => x.parent == department.id);
        foreach (var child in childs)
        {
          chartList.Add(child.id, child.name);
          await ChartDepartment(child.id, child.members_id);
        }
      }
    }
    else
    {
      var childs = departmentAll.Where(x => x.parent == null);
      foreach (var child in childs)
      {
        chartList.Add(child.id, child.name);
        await ChartDepartment(child.id, child.members_id);
      }
    }
  }

  private async Task ChartDepartment(string id, List<string> members_id)
  {
    var okrList = DbOkr.GetList(Layout.Company.id, Layout.CycleId, members_id);

    var labelProgress = ("Trên 75%,Từ 50% - 75%,Từ 25% - 50%,Dưới 25%").Split(",");
    var labelConfident = ("Rất tốt,Ổn,Không ổn,Chưa nhập").Split(",");

    int chartCount = 4;
    var dataOkrProgress = new int[chartCount];
    var dataOkrConfident = new int[chartCount];
    var dataKrProgress = new int[chartCount];
    var dataKrConfident = new int[chartCount];
    foreach (var okr in okrList)
    {
      // OKRs - Tiến độ
      var progress = DbOkr.GetProgress(okr.key_results);
      if (progress < 25)
        dataOkrProgress[3]++;
      else if (progress < 50)
        dataOkrProgress[2]++;
      else if (progress < 75)
        dataOkrProgress[1]++;
      else if (progress >= 75)
        dataOkrProgress[0]++;

      // OKRs - Tự tin
      if (okr.confident == 0)
        dataOkrConfident[3]++;
      else if (okr.confident == 3)
        dataOkrConfident[2]++;
      else if (okr.confident == 2)
        dataOkrConfident[1]++;
      else if (okr.confident == 1)
        dataOkrConfident[0]++;

      foreach (var kr in okr.key_results)
      {
        // KRs - Tiến độ
        var progressKr = Shared.Progress(kr.result, kr.target);
        if (progressKr < 25)
          dataKrProgress[3]++;
        else if (progressKr < 50)
          dataKrProgress[2]++;
        else if (progressKr < 75)
          dataKrProgress[1]++;
        else if (progressKr >= 75)
          dataKrProgress[0]++;

        // KRs - Tự tin
        if (kr.confident == 0)
          dataKrConfident[3]++;
        else if (kr.confident == 3)
          dataKrConfident[2]++;
        else if (kr.confident == 2)
          dataKrConfident[1]++;
        else if (kr.confident == 1)
          dataKrConfident[0]++;
      }
    }

    var colors = "#48c774,#3298dc,#ffdd57,#f14668";
    await JSRuntime.InvokeAsync<string>("chartDoughnut", "chartOkrProgress_" + id, labelProgress, dataOkrProgress, colors);
    await JSRuntime.InvokeAsync<string>("chartDoughnut", "chartOkrConfident_" + id, labelConfident, dataOkrConfident, colors);
    await JSRuntime.InvokeAsync<string>("chartDoughnut", "chartKrProgress_" + id, labelProgress, dataKrProgress, colors);
    await JSRuntime.InvokeAsync<string>("chartDoughnut", "chartKrConfident_" + id, labelConfident, dataKrConfident, colors);
  }

  #endregion
}