
<div class="card p-5">
  <ul class="columns is-vcentered is-variable is-2 mb-3">
    <li class="column">
      <div class="dropdown is-hoverable">
        <div class="dropdown-trigger">
          <div class="icon-text">
            <h1 class="title is-5 has-text-info">
              BẢNG XẾP HẠNG OKRs
            </h1>
            <span class="icon has-text-info">
              <i class="material-icons-outlined is-size-5">info</i>
            </span>
          </div>
        </div>
        <div class="dropdown-menu">
          <div class="dropdown-content">
            <div class="dropdown-item">
              Xếp hạng tính theo trung bình cộng tỉ lệ hoàn thành OKRs của từng cá nhân.
            </div>
          </div>
        </div>
      </div>
    </li>
    <li class="column is-narrow">
      <DepartmentDropdown department="@filterDepartment" OnUpdate="ChangeFilterDepartment" />
    </li>
  </ul>
  <ul class="columns is-variable is-8 rank_top">
    @for (int i = 0; i < 3; i++)
    {
      if (i < dataList.Count)
      {
        var item = dataList[i];
        <li class="column is-one-third">
          <div class="has-text-centered pb-3 mb-3 is-relative">
            <div class="title">@(i+1)</div>
            <div class="subtitle">
              @Shared.ConvertNumber(item.value)%
            </div>
          </div>
          <div class="user_item">
            <img class="image is-36x36 mr-3" src="@item.avatar" alt="IMG">
            <div>
              <strong class="is-block is-size-6 has-text-info">@item.name</strong>
              <span class="text_1_line has-text-grey is-size-7" style="width: 240px;">
                @item.departments
              </span>
            </div>
          </div>
        </li>
      }
    }
  </ul>
  <div class="scrolly pr-2 mt-5 rank_list" style="max-height: 280px;">
    <ul class="columns is-multiline is-variable is-2">
      @for (int i = 3; i < dataList.Count; i++)
      {
        if (i < dataList.Count)
        {
          var item = dataList[i];

          <li class="column is-half px-6">
            <ul class="columns is-vcentered is-variable is-2 is-mobile">
              <li class="column is-1 is-size-6">#@(i+1)</li>
              <li class="column is-9">
                <div class="user_item">
                  <img class="image is-36x36 mr-3" src="@item.avatar" alt="IMG">
                  <div>
                    <strong class="is-block is-size-6 has-text-info">@item.name</strong>
                    <span class="text_1_line has-text-grey is-size-7" style="width: 240px;">
                      @item.departments
                    </span>
                  </div>
                </div>
              </li>
              <li class="column is-2 has-text-right has-text-info has-text-weight-semibold">
                @Shared.ConvertNumber(item.value)%
              </li>
            </ul>
          </li>
        }
      }
    </ul>
  </div>
</div>

@code {
  [CascadingParameter]
  public LayoutMain Layout { get; set; }
  [Parameter]
  public List<DepartmentModel> departmentAll { get; set; }
  [Parameter]
  public List<DepartmentModel.SelectList> departments { get; set; }

  private string filterUserId = string.Empty;
  private string filterDepartment = null;

  private List<ProgressModel> dataList = new();
  private List<string> userListId = new();

  protected override async Task OnInitializedAsync()
  {
    filterDepartment = Layout.User.department_default; 
    await ChangeFilterDepartment(filterDepartment);
  }

  private async Task ChangeFilterDepartment(string value)
  {
    filterDepartment = value;
    if (string.IsNullOrEmpty(filterDepartment))
      userListId = (from x in Layout.UserList select x.id).ToList();
    else
      userListId = (from x in Layout.UserList
                          where x.departments_id.Contains(filterDepartment)
                          select x.id).ToList();
    await GetData();
  }

  private async Task GetData()
  {
    await Task.Delay(1); 
    dataList.Clear();
    
    var OkrData = DbOkr.GetList(Layout.Company.id, Layout.CycleId, userListId);
    var rankOkrList = DbOkr.GetList(Layout.Company.id, Layout.CycleId, userListId);
    foreach (var userId in userListId)
    {
      var user = Layout.UserList.SingleOrDefault(x => x.id == userId);
      if (user != null)
      {
        double totalProgress = 0;
        var okrList = OkrData.Where(x => x.user_create == user.id).ToList();
        foreach (var okr in okrList)
        {
          totalProgress += DbOkr.GetProgress(okr.key_results);
        }

        dataList.Add(new ProgressModel()
          {
            id = user.id,
            name = user.FullName,
            avatar = user.avatar,
            departments = user.departments_name,
            value = totalProgress > 0 ? totalProgress / okrList.Count : 0
          });
      }
    }
    dataList = dataList.OrderByDescending(x => x.value).ToList();
  }
}