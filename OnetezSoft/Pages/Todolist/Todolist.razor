@page "/todolist"
@page "/todolist/{Day}"
@inject IJSRuntime JSRuntime
@inject NavigationManager navigation

<PageTitle>Todolist của tôi</PageTitle>

<section class="p-4">
  <ul class="columns is-multiline is-vcentered">
    <li class="column">
      <h1 class="title is-5 has-text-weight-bold has-text-link">
        Chào buổi @Shared.DateSession(), @Layout.User.FullName
      </h1>
    </li>
    <li class="column is-narrow has-text-weight-bold is-size-7">
      Bạn đang có
      <span class="has-text-danger">@achievement</span>
      ngày liên tiếp không trễ Todolist
    </li>
  </ul>

  <_AssignedTodo />

  <_TodoToday Day="@Day" OnCheckout="GetAchievement" />

  <_AssignedList />

  <_TodoList />

</section>

@if(!CheckAccess())
{
  <div class="modal is-active">
    <div class="modal-background"></div>
    <div class="modal-content" style="max-width: 360px;">
      <div class="box has-text-centered pt-5">
        <span class="icon is-large has-text-danger">
          <i class="material-icons-outlined is-size-1">error_outline</i>
        </span>
        <div class="is-size-6 py-4 has-text-weight-semibold">
          @msgAccess
        </div>
      </div>
    </div>
  </div>
}

@code {
  [CascadingParameter]
  public LayoutMain Layout { get; set; }
  [Parameter]
  public string Day { get; set; }
  private string msgAccess = string.Empty;
  private int achievement = 0;

  protected override async Task OnInitializedAsync()
  {
    await GetAchievement();
  }

  private async Task GetAchievement()
  {
    // Tính thành tựu Todolist
    Shared.GetTimeSpan(2, out DateTime start, out DateTime end);
    achievement = await DbTodolist.DataAchievement(Layout.Company.id, Layout.User.id, start, end);
  }

  private bool CheckAccess()
  {
    return ProductService.CheckAccess(Layout.Company, Layout.User, "todolist", out msgAccess);
  }
}