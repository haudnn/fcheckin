@page "/config/okrs/suggests"
@inject IJSRuntime JSRuntime
@inject NavigationManager navigation

<PageTitle>@_title</PageTitle>

@if (!string.IsNullOrEmpty(_message))
{
  <div id="notify">
    <div class="notification is-@(_success ? "success" : "danger")">
      <button class="delete" @onclick="() => _message = string.Empty"></button>
      <p>@((MarkupString)_message)</p>
    </div>
  </div>
}

@if (Layout.User.role != 1 && !Layout.User.role_manage.okrs)
{
  <PopupNoRole />
}
else
{
  <section class="columns is-gapless has_menu_left @(_loaded ? "" : "is-loading")">
    <div class="column is-narrow">
      <div class="card p-3 menu_left">
        <a href="/config/okrs/cycles">
          Chu kỳ OKRs
        </a>
        <a class="is-active" href="/config/okrs/suggests">
          Phiếu <br /> góp ý
        </a>
        <a href="/config/okrs/evaluates">
          Tiêu chí đánh giá
        </a>
        <a href="/config/okrs/stars/plus">
          Cấp sao
        </a>
        <a href="/config/okrs/stars/minus">
          Trừ sao
        </a>
      </div>
    </div>
    <div class="column">
      <div class="card p-5">
        <ul class="columns is-vcentered">
          <li class="column">
            <h1 class="title is-5 has-text-info is-uppercase">
              Cấu hình loại phiếu góp ý
            </h1>
          </li>
          <li class="column is-narrow">
            <a class="button is-small" @onclick="() => EditItem(null)">
              <span class="icon">
                <span class="material-icons-outlined is-size-6">add</span>
              </span>
              <span>Thêm mới</span>
            </a>
          </li>
        </ul>
        <table class="table is-fullwidth is-vcentered is-responsive mt-5">
          <thead>
            <tr>
              <th>Tên loại phiếu</th>
              <th width="70px" align="center">Xử lý</th>
            </tr>
          </thead>
          <tbody>
            @foreach (var item in dataList)
            {
              <tr>
                <td>
                  <span class="has-text-weight-semibold">@item.name</span>
                </td>
                <td align="center">
                  <label class="td-label">Xử lý</label>
                  <div class="td-value">
                    <a class="icon has-text-link" title="Chỉnh sửa" @onclick="() => EditItem(item)">
                      <i class="material-icons-outlined is-size-5">
                        edit
                      </i>
                    </a>
                    <a class="icon has-text-danger" title="Xóa" @onclick="() => DeleteItem(item)">
                      <i class="material-icons-outlined is-size-5">
                        delete
                      </i>
                    </a>
                  </div>
                </td>
              </tr>
            }
          </tbody>
        </table>
      </div>
    </div>
  </section>
}

@if (current != null)
{
  <div class="modal is-active">
    <div class="modal-background"></div>
    <div class="modal-card">
      <div class="modal-card-head">
        <div class="modal-card-title">
          @(string.IsNullOrEmpty(current.id) ? "Tạo loại phiếu góp ý mới" : "Chỉnh sửa loại phiếu góp ý")
        </div>
        <a class="delete" @onclick="() => current = null"></a>
      </div>
      <div class="modal-card-body">
        <form @onsubmit="Update">
          <div class="field">
            <label class="label">Tên loại phiếu góp ý</label>
            <div class="control">
              <input @bind="current.name" type="text" class="input" />
            </div>
          </div>
          <div class="field mt-5">
            <div class="buttons is-right">
              <a class="button" @onclick="() => current = null">
                Hủy
              </a>
              <a class="button is-link" @onclick="Update">
                <span class="icon">
                  <span class="material-icons-outlined is-size-6">
                    done
                  </span>
                </span>
                <span>Cập nhật</span>
              </a>
            </div>
          </div>
        </form>
      </div>
    </div>
  </div>
}

@code {
  [CascadingParameter]
  public LayoutMain Layout { get; set; }

  [Parameter]
  public string Id { get; set; }

  private bool _loaded = false;
  private bool _success = false;
  private string _message = string.Empty;
  private string _title = "Cấu hình loại phiếu góp ý";

  private List<OkrConfigModel.Suggest> dataList = new();
  private OkrConfigModel.Suggest current = null;
  private OkrConfigModel config = new();

  protected override async Task OnInitializedAsync()
  {
    config = await DbOkrConfig.Get(Layout.Company.id);
    dataList = config.suggests;
    _loaded = true;
  }

  private async Task DeleteItem(OkrConfigModel.Suggest item)
  {
    if (!await JSRuntime.InvokeAsync<bool>("confirm", $"Bạn có chắc muốn xóa {item.name}"))
      return;

    dataList.Remove(item);
    config.suggests = dataList;
    await DbOkrConfig.Update(Layout.Company.id, config);

    await Layout.RefreshData();
  }

  private void EditItem(OkrConfigModel.Suggest item)
  {
    if (item == null)
    {
      current = new();
    }
    else
    {
      current = item;
    }
  }

  private async Task Update()
  {
    _success = false;
    _message = string.Empty;

    if (string.IsNullOrEmpty(current.name))
    {
      _message = "Bạn cần nhập tên loại phiếu góp ý !";
      await Task.Delay(5000);
      _message = string.Empty;
    }
    else
    {
      if (string.IsNullOrEmpty(current.id))
      {
        current.id = Mongo.RandomId();
        dataList.Add(current);
      }

      dataList = dataList.OrderBy(x => x.name).ToList();
      config.suggests = dataList;
      await DbOkrConfig.Update(Layout.Company.id, config);

      current = null;

      await Layout.RefreshData();
    }
  }
}