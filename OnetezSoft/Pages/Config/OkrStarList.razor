@page "/config/okrs/stars/plus"
@page "/config/okrs/stars/minus"
@inject IJSRuntime JSRuntime
@inject NavigationManager navigation

<PageTitle>@_title</PageTitle>

@if (!string.IsNullOrEmpty(_message))
{
  <div id="notify">
    <div class="notification is-@(_success ? "success" : "danger")">
      <button class="delete" @onclick="() => _message = string.Empty"></button>
      <p>@((MarkupString)_message)</p>
    </div>
  </div>
}

@if (Layout.User.role != 1 && !Layout.User.role_manage.okrs)
{
  <PopupNoRole />
}
else
{
  <section class="columns is-gapless has_menu_left @(_loaded ? "" : "is-loading")">
    <div class="column is-narrow">
      <div class="card p-3 menu_left">
        <a href="/config/okrs/cycles">
          Chu kỳ OKRs
        </a>
        <a href="/config/okrs/suggests">
          Phiếu <br /> góp ý
        </a>
        <a href="/config/okrs/evaluates">
          Tiêu chí đánh giá
        </a>
        <a class="@(isPlus ? "is-active" : "")" href="/config/okrs/stars/plus">
          Cấp sao
        </a>
        <a class="@(!isPlus ? "is-active" : "")" href="/config/okrs/stars/minus">
          Trừ sao
        </a>
      </div>
    </div>
    <div class="column">
      <div class="card p-5">
        <ul class="columns is-vcentered">
          <li class="column">
            <h1 class="title is-5 has-text-info is-uppercase">
              @_title
            </h1>
          </li>
          <li class="column is-narrow">
            @if (isPlus)
            {
              <a class="button is-link" href="/config/okrs/stars/add">
                <span class="icon">
                  <span class="material-icons-outlined is-size-6">add</span>
                </span>
                <span>Cấp sao</span>
              </a>
            }
            else
            {
              <a class="button is-danger" href="/config/okrs/stars/remove">
                <span class="icon">
                  <span class="material-icons-outlined is-size-6">remove</span>
                </span>
                <span>Trừ sao</span>
              </a>  
            }
          </li>
        </ul>
        <ul class="columns is-variable is-2">
          <li class="column is-one-quarter">
            <div class="select is-fullwidth">
              <select @onchange="ChangeDepartment" class="is-family-code">
                <option value="">Tất cả phòng ban</option>
                @foreach (var item in departments)
                {
                  <option value="@item.id">@item.name</option>
                }
              </select>
            </div>
          </li>
          <li class="column is-one-quarter">
            <div class="control has-icons-right has_suggest">
              <input class="input" type="text" placeholder="Nhập tên nhân viên..."
                   autocomplete="off" @bind="UserSearch" @bind:event="oninput" />
              <ul class="suggest">
                @foreach (var item in userSuggests)
                {
                  <li class="rsitem" @onclick="() => UserSelected(item)">
                    <div class="user_item">
                      <img class="image is-24x24 mr-2" src="@item.avatar" alt="IMG">
                      <span>@item.FullName</span>
                    </div>
                  </li>
                }
              </ul>
              <span class="icon is-right">
                <i class="material-icons-outlined">search</i>
              </span>
            </div>
          </li>
          <li class="column">
            <div class="field has-addons">
              <div class="control">
                <span class="button is-link">
                  <i class="material-icons-outlined">calendar_today</i>
                </span>
              </div>
              <div class="control">
                <div class="input">
                  <DateRangePicker @bind-StartDate="filterStart" @bind-EndDate="filterEnd" />
                </div>
              </div>
              <div class="control">
                <div class="select is-fullwidth">
                  <select @onchange="ChangeDate">
                    <option value="1">Tuần này</option>
                    <option value="11">Tuần trước</option>
                    <option value="2">Tháng này</option>
                    <option value="22">Tháng trước</option>
                    <option value="3">Quý này</option>
                  </select>
                </div>
              </div>
            </div>
          </li>
          <li class="column is-narrow">
            <a class="button is-link is-outlined" @onclick="Search">
              <span class="icon">
                <i class="material-icons-outlined">search</i>
              </span>
              <span>Tìm kiếm</span>
            </a>
          </li>
        </ul>
        <table class="table is-fullwidth is-vcentered is-responsive mt-5">
          <thead>
            <tr>
              <th width="150px">Thời gian</th>
              <th width="20%">Nhân viên</th>
              <th>Phòng ban</th>
              <th width="110px">Cấp bậc</th>
              <th width="100px">Loại ví</th>
              <th width="80px" align="center">@(isPlus ? "Sao cấp" : "Sao trừ")</th>
              <th width="18%">Người thực hiện</th>
              <th width="50px" align="center">Xử lý</th>
            </tr>
          </thead>
          <tbody>
            @foreach (var item in dataList)
            {
              var user = Layout.UserList.SingleOrDefault(x => x.id == item.user);

              if (user != null)
              {
                if (!string.IsNullOrEmpty(filterDepartment) && !user.departments_id.Contains(filterDepartment))
                  continue;

                var create = Layout.UserList.SingleOrDefault(x => x.id == item.create_id);

                <tr>
                  <td>
                    @string.Format("{0:HH:mm - dd/MM/yyyy}", new DateTime(item.create_date))
                  </td>
                  <td>
                    <label class="td-label">Nhân viên</label>
                    <div class="td-value">
                      <div class="is-flex is-vcentered">
                        <figure class="image is-rounded is-24x24 mr-2" style="min-width: 24px;">
                          <img src="@user.avatar" alt="IMG" />
                        </figure>
                        <a class="text_1_line has-text-weight-semibold">@user.first_name @user.last_name</a>
                      </div>
                    </div>
                  </td>
                  <td>
                    <label class="td-label">Phòng ban</label>
                    <div class="td-value">
                      <div class="text_1_line">
                        @user.departments_name
                      </div>
                    </div>
                  </td>
                  <td>
                    <label class="td-label">Cấp bậc</label>
                    <div class="td-value">
                      @if (user.title == 1)
                      {
                        <span>Quản lý</span>
                      }
                      else if (user.title == 2)
                      {
                        <span>Phó quản lý</span>
                      }
                      else
                      {
                        <span>Nhân viên</span>
                      }
                    </div>
                  </td>
                  <td>
                    <label class="td-label">Loại ví</label>
                    <div class="td-value">
                      @(item.wallet == 2 ? "Cá nhân" : "Ghi nhận")
                    </div>
                  </td>
                  <td align="center">
                    <label class="td-label">@(isPlus ? "Sao cấp" : "Sao trừ")</label>
                    <div class="td-value has-text-weight-semibold">
                      @item.star
                    </div>
                  </td>
                  <td>
                    <label class="td-label">Người thực hiện</label>
                    <div class="td-value">
                      @if (create != null)
                      {
                        <div class="is-flex is-vcentered">
                          <figure class="image is-rounded is-24x24 mr-2" style="min-width: 24px;">
                            <img src="@create.avatar" alt="IMG" />
                          </figure>
                          <a class="text_1_line">@create.first_name @create.last_name</a>
                        </div>
                      }
                    </div>
                  </td>
                  <td align="center">
                    <label class="td-label">Xử lý</label>
                    <div class="td-value">
                      <a class="icon has-text-danger" title="Xóa" @onclick="() => DeleteItem(item, user)">
                        <i class="material-icons-outlined is-size-5">
                          delete
                        </i>
                      </a>
                    </div>
                  </td>
                </tr>
              }
              else
              {
                <tr>
                  <td>
                    @string.Format("{0:HH:mm - dd/MM/yyyy}", new DateTime(item.create_date))
                  </td>
                  <td colspan="6">
                    <i>Nhân viên đã bị xóa</i>
                  </td>
                </tr>
              }
            }
          </tbody>
        </table>
      </div>
    </div>
  </section>
}

@code {
  [CascadingParameter]
  public LayoutMain Layout { get; set; }

  private bool _loaded = false;
  private bool _success = false;
  private string _message = string.Empty;
  private string _title = string.Empty;

  private List<OkrStarModel> dataList = new();
  private List<DepartmentModel> departmentAll = new();
  private List<DepartmentModel.SelectList> departments = new();

  private string filterDepartment = string.Empty;
  private string filterUserName = string.Empty;
  private string filterUserId = string.Empty;
  private DateTimeOffset? filterStart { get; set; }
  private DateTimeOffset? filterEnd { get; set; }
  private List<UserModel> userSuggests = new();
  private bool isPlus = true;

  protected override void OnInitialized()
  {
    departmentAll = DbDepartment.GetAll(Layout.Company.id);
    departments.AddRange(DbDepartment.GetSelectList(Layout.Company.id, null, 0, null));

    _loaded = true;
  }

  protected override async Task OnParametersSetAsync()
  {
    isPlus = navigation.Uri.EndsWith("plus");
    _title = isPlus ? "Lịch sử cấp sao" : "Lịch sử trừ sao";

    Shared.GetTimeSpan(1, out DateTime start, out DateTime end);
    filterStart = start;
    filterEnd = end;

    await Search();
  }

  private async Task Search()
  {
    dataList = await DbOkrStar.GetList(Layout.Company.id, filterUserId, isPlus, 
      filterStart.Value.DateTime, filterEnd.Value.DateTime);
  }

  private async Task DeleteItem(OkrStarModel item, UserModel user)
  {
    if (!await JSRuntime.InvokeAsync<bool>("confirm", 
      $"Bạn có chắc muốn xóa sao đã {(isPlus ? "cấp" : "trừ")} của {user.first_name} {user.last_name} ?"))
      return;

    if (await DbOkrStar.Delete(Layout.Company.id, item.id))
    {
      dataList.Remove(item);
      _message = $"Đã xóa dữ liệu {(isPlus ? "cấp" : "trừ")} sao !";
      _success = true;

      // Update data star of Users
      user.star_total -= item.star;
      user.star_distribute -= item.star;
      await DbUser.Update(Layout.Company.id, user);
    }
    else
    {
      _message = $"Không thể xóa dữ liệu {(isPlus ? "cấp" : "trừ")} sao này, vui lòng thử lại !";
      _success = false;
    }
  }

  private void ChangeDepartment(ChangeEventArgs e)
  {
    filterDepartment = e.Value.ToString();
  }

  private void ChangeDate(ChangeEventArgs e)
  {
    var type = Convert.ToInt32(e.Value);
    Shared.GetTimeSpan(type, out DateTime start, out DateTime end);
    filterStart = start;
    filterEnd = end;
  }

  private string UserSearch
  {
    get => filterUserName;
    set
    {
      filterUserName = value;
      userSuggests = new();
      if (!string.IsNullOrEmpty(value))
      {
        foreach (var item in Layout.UserList)
        {
          bool check = true;
          if (!string.IsNullOrEmpty(filterDepartment))
            if (item.departments_id == null || !item.departments_id.Contains(filterDepartment))
              check = false;
          if (!Handled.Shared.SearchKeyword(filterUserName, item.first_name + item.last_name))
            check = false;

          if (check)
            userSuggests.Add(item);
        }
      }
    }
  }

  private void UserSelected(UserModel item)
  {
    filterUserId = item.id;
    filterUserName = item.first_name + " " + item.last_name;
    userSuggests = new();
  }
}