@page "/config/system/user/edit/{Id}"
@inject IJSRuntime JSRuntime
@inject NavigationManager navigation

<PageTitle>Thông tin nhân viên</PageTitle>

@if (Layout.User.role != 1 && !Layout.User.role_manage.system)
{
  <PopupNoRole />
}
else if (Layout.User.role == 2 && user.role == 1)
{
  <PopupNoRole />
}
else
{
  <section class="columns is-gapless has_menu_left">
    <div class="column is-narrow">
      <div class="card p-3 menu_left">
        <a href="/config/system/department/list">
          Phòng ban
        </a>
        <a class="is-active" href="/config/system/user/list">
          Nhân sự
        </a>
        <a href="/config/system/dayoff">
          Thiết lập ngày nghỉ
        </a>
      </div>
    </div>
    <div class="column">
      <div class="card p-5">
        <ul class="columns is-vcentered">
          <li class="column is-narrow">
            <h1 class="title is-5 has-text-info is-uppercase">
              Thông tin tài khoản
            </h1>
          </li>
        </ul>
        <form @onsubmit="Update">
          <ul class="columns is-multiline">
            <li class="column is-full">
              <div class="field">
                <label class="label">Địa chỉ email *</label>
                <div class="control">
                  <input value="@user.email" type="email" class="input" readonly />
                </div>
              </div>
            </li>
            <li class="column is-half">
              <div class="field">
                <label class="label">Họ *</label>
                <div class="control">
                  <input @bind="user.last_name" type="text" class="input" />
                </div>
              </div>
            </li>
            <li class="column is-half">
              <div class="field">
                <label class="label">Tên *</label>
                <div class="control">
                  <input @bind="user.first_name" type="text" class="input" />
                </div>
              </div>
            </li>
            <li class="column is-half">
              <div class="field">
                <label class="label">Hình đại diện</label>
                <div class="field has-addons">
                  <div class="control">
                    <a class="image is-square">
                      <img src="@user.avatar" alt="IMG">
                    </a>
                  </div>
                  <div class="control is-expanded @(uploading ? "is-loading" : "")">
                    <InputFile OnChange="Upload" accept="image/*" class="input" />
                  </div>
                </div>
              </div>
            </li>
            <li class="column is-half">
              <div class="field">
                <label class="label">Quyền hạn *</label>
                <div class="control">
                  <div class="select is-fullwidth">
                    <select @onchange="ChangeRole">
                      @foreach (var sl in DbUser.Role())
                      {
                        if (user.role == sl.id)
                        {
                          <option value="@sl.id" selected>@sl.name</option>
                        }
                        else
                        {
                          <option value="@sl.id">@sl.name</option>
                        }
                      }
                    </select>
                  </div>
                </div>
              </div>
            </li>
            <li class="column is-half">
              <div class="field">
                <label class="label">Thuộc công ty</label>
                <div class="control">
                  <div class="select is-fullwidth">
                    <select @bind="user.company_id">
                      <option value="">- chọn công ty -</option>
                      @foreach (var sl in companyOptions)
                      {
                        <option value="@sl.id">@sl.name</option>
                      }
                    </select>
                  </div>
                </div>
              </div>
            </li>
            <li class="column is-half">
              <div class="field">
                <label class="label">Thuộc phòng ban</label>
                <div class="control">
                  <div class="select is-fullwidth">
                    <select @bind="user.department_id">
                      <option value="">- chọn phòng ban -</option>
                      @foreach (var sl in departmentOptions)
                      {
                        <option value="@sl.id">@sl.name</option>
                      }
                    </select>
                  </div>
                </div>
              </div>
            </li>
            <li class="column is-full">
              @if (user.role == 1)
              {
                <hr class="mt-0" />
                <div class="field">
                  <div class="control">
                    <label class="checkbox">
                      <input type="checkbox" @bind="user.noti_store" />
                      <span class="has-text-weight-bold has-text-link">THÔNG BÁO ĐỔI QUÀ</span>
                    </label>
                  </div>
                  <div class="control has-text-grey mt-2">
                    Nhận thông báo khi có người yêu cầu <b>Đổi quà</b>
                  </div>
                </div>
                <div class="field">
                  <div class="control">
                    <label class="checkbox">
                      <input type="checkbox" @bind="user.okr_checkin" />
                      <span class="has-text-weight-bold has-text-link">TỰ CHECKIN OKRs</span>
                    </label>
                  </div>
                  <div class="control has-text-grey mt-2">
                    Cho phép người dùng tự checkin OKRs mà không cần người khác xác nhận <b>OKRs</b>
                  </div>
                </div>
              }
              else if (user.role == 2)
              {
                <hr class="mt-0" />
                <div class="field">
                  <div class="control">
                    <label class="checkbox">
                      <input type="checkbox" @bind="user.role_manage.system" />
                      <span class="has-text-weight-bold has-text-link">CƠ CẤU</span>
                    </label>
                  </div>
                  <div class="control has-text-grey mt-2">
                    Truy cập tất cả chức năng trong trang <b>Cấu hình / Cơ cấu</b> bao gồm:
                    <b>Phòng ban, Nhân sự, Thiết lập ngày nghỉ</b>
                  </div>
                </div>
                if (CheckAccess("okrs"))
                {
                  <div class="field">
                    <div class="control">
                      <label class="checkbox">
                        <input type="checkbox" @bind="user.role_manage.okrs" />
                        <span class="has-text-weight-bold has-text-link">OKRs - Ghi nhận</span>
                      </label>
                    </div>
                    <div class="control has-text-grey mt-2">
                      Truy cập tất cả chức năng trong trang <b>Cấu hình / OKRs - Ghi nhận</b> bao gồm:
                      <b>Đơn vị tính, Chu kỳ OKRs, Phiếu góp ý, Tiêu chí đánh giá, Cấp sao, Trừ sao</b>
                    </div>
                  </div>
                }
                if (CheckAccess("kaizen"))
                {      
                  <div class="field">
                    <div class="control">
                      <label class="checkbox">
                        <input type="checkbox" @bind="user.role_manage.kaizen" />
                        <span class="has-text-weight-bold has-text-link">KAIZEN</span>
                      </label>
                    </div>
                    <div class="control has-text-grey mt-2">
                      Truy cập tất cả chức năng trong trang <b>Cấu hình / Kaizen</b>
                      <br />
                      Truy cập tất cả chức năng nâng cao tại trang <b>Kaizen</b> bao gồm:
                      <b>Xóa góp ý Kaizen, Đánh giá quản lý cho góp ý Kaizen, Ghim, Xóa phản hồi Kaizen</b>
                    </div>
                  </div>
                }
                if (CheckAccess("train"))
                {  
                  <div class="field">
                    <div class="control">
                      <label class="checkbox">
                        <input type="checkbox" @bind="user.role_manage.educate" />
                        <span class="has-text-weight-bold has-text-link">ĐÀO TẠO</span>
                      </label>
                    </div>
                    <div class="control has-text-grey mt-2">
                      Truy cập tất cả chức năng trong trang <b>Cấu hình / Đào tạo</b> bao gồm:
                      <b>Danh mục, Mẫu chứng chỉ</b>
                      <br />
                      Truy cập, chỉnh sửa tất cả các khóa học tại trang <b>Đào tạo / Quản lý khóa học</b>
                    </div>
                  </div>
                }
                if (CheckAccess("timekeeping"))
                {
                  <div class="field">
                    <div class="control">
                      <label class="checkbox">
                        <input type="checkbox" @bind="user.role_manage.timekeeping" />
                        <span class="has-text-weight-bold has-text-link">CHẤM CÔNG</span>
                      </label>
                    </div>
                    <div class="control has-text-grey mt-2">
                      Truy cập tất cả chức năng trong trang <b>Chấm công</b>
                    </div>
                  </div>
                }
                <div class="field">
                  <div class="control">
                    <label class="checkbox">
                      <input type="checkbox" @bind="user.role_manage.store" />
                      <span class="has-text-weight-bold has-text-link">ĐỔI QUÀ</span>
                    </label>
                  </div>
                  <div class="control has-text-grey mt-2">
                    Truy cập tất cả chức năng trong trang <b>Cấu hình / Đổi quà</b> bao gồm:
                    <b>Cửa hàng, Đơn hàng, Ưu đãi</b>
                  </div>
                </div>
                <div class="field">
                  <div class="control">
                    <label class="checkbox">
                      <input type="checkbox" @bind="user.role_manage.other" />
                      <span class="has-text-weight-bold has-text-link">TIỆN ÍCH</span>
                    </label>
                  </div>
                  <div class="control has-text-grey mt-2">
                    Truy cập tất cả chức năng trong trang <b>Cấu hình / Tiện ích</b> bao gồm:
                    <b>Banner, Điểm tin, Châm ngôn, Thành tựu</b>
                  </div>
                </div>
                <hr class="mb-0" />
              }
            </li>
          </ul>
          <div class="field mt-5">
            <div class="buttons is-right">
              <a class="button" onclick="goBack()">
                <span>Quay lại</span>
              </a>
              @if (string.IsNullOrEmpty(user.id))
              {
                <a class="button is-link" @onclick="Update">
                  <span class="icon">
                    <i class="material-icons-outlined is-size-6">add</i>
                  </span>
                  <span>Thêm mới</span>
                </a>
              }
              else
              {
                <a class="button is-link" @onclick="Update">
                  <span class="icon">
                    <i class="material-icons-outlined is-size-6">done</i>
                  </span>
                  <span>Cập nhật</span>
                </a>
              }
            </div>
          </div>
        </form>
      </div>
    </div>
  </section>
}

@code {
  [CascadingParameter]
  public LayoutMain Layout { get; set; }

  [Parameter]
  public string Id { get; set; }

  private UserModel user = new();
  private List<HrmOptionModel> companyOptions = new();
  private List<HrmOptionModel> departmentOptions = new();
  
  protected override async Task OnParametersSetAsync()
  {
    companyOptions = await DbHrmOption.GetList(Layout.Company.id, "company");
    departmentOptions = await DbHrmOption.GetList(Layout.Company.id, "department");
    user = await DbUser.Get(Layout.Company.id, Id);
  }

  private async Task Update()
  {
    if (string.IsNullOrEmpty(user.email) || !user.email.Contains("@"))
      await JSRuntime.InvokeVoidAsync("tagline", false, "Bạn chưa nhập địa chỉ email, hoặc email không đúng định dạng!");
    else if (string.IsNullOrEmpty(user.first_name) || string.IsNullOrEmpty(user.last_name))
      await JSRuntime.InvokeVoidAsync("tagline", false, "Bạn chưa nhập họ và tên cho tài khoản!");
    else
    {
      // Cập nhật database tổ chức
      await DbUser.Update(Layout.Company.id, user);
      // Cập nhật cho tất cả database
      await DbMainUser.Update(user);
      // Thông báo tagline
      await JSRuntime.InvokeVoidAsync("tagline", true, "Đã cập nhật thông tin thành công!");
    }
  }

  private void ChangeRole(ChangeEventArgs e)
  {
    user.role = Convert.ToInt32(e.Value);
    user.noti_store = true;
    user.okr_checkin = false;
    if (user.role == 1)
    {
      user.role_manage.system = true;
      user.role_manage.okrs = true;
      user.role_manage.kaizen = true;
      user.role_manage.educate = true;
      user.role_manage.store = true;
      user.role_manage.other = true;
      user.role_manage.timekeeping = true;
      user.role_manage.hrrecords = true;
    }
    else if (user.role == 3)
    {
      user.role_manage.system = false;
      user.role_manage.okrs = false;
      user.role_manage.kaizen = false;
      user.role_manage.educate = false;
      user.role_manage.store = false;
      user.role_manage.other = false;
      user.role_manage.timekeeping = false;
      user.role_manage.hrrecords = false;
    }
  }

  private bool uploading = false;
  private async Task Upload(InputFileChangeEventArgs e)
  {
    foreach (var file in e.GetMultipleFiles())
    {
      try
      {
        if (file.Size <= Layout.MaxFileSize)
        {
          var fileContent = new StreamContent(file.OpenReadStream(Layout.MaxFileSize));
          user.avatar = await Files.SaveFileAsync(fileContent, file.Name);
        }
        else
          await JSRuntime.InvokeVoidAsync("tagline", false, $"Chỉ cho phép file tối đa {string.Format("{0:0,0}", Layout.MaxFileSize / 1024000)} MB");
      }
      catch (Exception ex)
      {
        await JSRuntime.InvokeVoidAsync("tagline", false, $"Không thể tải ảnh lên: {ex.Message}");
      }
    }
  }

  private bool CheckAccess(string productId)
  {
    return ProductService.CheckAccess(Layout.Company, user, productId, out string message);
  }
}