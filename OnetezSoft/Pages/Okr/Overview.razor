@page "/okr/overview"
@inject IJSRuntime JSRuntime
@inject NavigationManager navigation

<PageTitle>@_title</PageTitle>

<section class="p-4 @(_loaded ? "" : "is-loading")">
  <div class="card px-5 pt-5 pb-2 p-4-mobile">
    <ul class="columns is-vcentered is-variable is-2 is-mobile is-multiline mb-5">
      <li class="column is-full-mobile">
        <h1 class="title is-5 has-text-info">
          TỔNG QUAN OKRs
        </h1>
      </li>
      <li class="column is-narrow">
        <DepartmentDropdown department="@filterDepartment" OnUpdate="ChangeFilterDepartment" />
      </li>
      <li class="column is-one-quarter">
        <MemberSearch department="@filterDepartment" sources="Layout.UserList"      
          OnUpdate="ChangeFilterUser" />
      </li>
      <li class="column is-narrow">
        <div class="field has-addons">
          <div class="control">
            <a class="button is-link @(!listMode ? "" : "is-outlined")" @onclick="() => ChangeMode(false)">
              <span class="icon">
                <i class="material-icons-outlined is-size-6">account_tree</i>
              </span>
            </a>
          </div>
          <div class="control">
            <a class="button is-link @(listMode ? "" : "is-outlined")" @onclick="() => ChangeMode(true)">
              <span class="icon">
                <i class="material-icons-outlined is-size-6">toc</i>
              </span>
            </a>
          </div>
        </div>
      </li>
    </ul>

    @if(listMode)
    {
      <div class="pb-4">
        <ul class="columns is-multiline is-mobile is-variable is-1 px-4 my-1 is-size-7 is-hidden-mobile">
          <li class="column">
          </li>
          <li class="column is-3">
            Quản lý
          </li>
          <li class="column is-narrow">
            <div style="width: 100px;">Số nhân sự</div>
          </li>
          <li class="column is-2 has-text-right">
            Tiến độ OKRs
          </li>
        </ul>
        @foreach (var child in dataList)
        {
          <_OkrOverview Current="child" ShowChilds="true" />
        }
      </div>
    }
    else
    {
      <div class="scrolly" style="height: calc(100vh - 135px);">
        @{
          var data = okrList[100];
        }
      </div>
    }
  </div>
</section>

<section class="p-4 @(listMode ? "" : "is-hidden")">
  <div class="card p-5 p-4-mobile">
    <ul class="columns is-vcentered is-variable is-2">
      <li class="column">
        <div class="user_item">
          <img class="image is-32x32 mr-2" src="@filterUser.avatar" alt="IMG">
          <span class="title is-5 is-size-6-mobile has-text-info">
            @filterUser.FullName - OKRs Cá Nhân
          </span>
        </div>
      </li>
    </ul>
    <table class="table is-fullwidth is-noborder is-responsive mt-5">
      <thead>
        <tr>
          <th>Mục tiêu</th>
          <th width="160px">Kết Quả Then Chốt</th>
          <th width="200px" align="center">Tiến độ</th>
          <th width="90px" align="center">Thay đổi</th>
          <th width="90px" align="center">Ngày tạo</th>
        </tr>
      </thead>
      <tbody>
        @foreach (var okr in okrList)
        {
          var showKey = okrsShow.Contains(okr.id);
          var progress = DbOkr.GetProgress(okr.key_results);
          var okrColor = Shared.ProgressColor(progress);

          <tr>
            <td>
              <div class="is-flex">
                <span class="has-text-weight-semibold has-text-link">
                  @okr.name
                </span>
                @if (okr.done)
                {
                  <span class="ml-1 icon" title="OKRs đã hoàn thành">
                    <i class="material-icons is-size-6 has-text-success">check_circle</i>
                  </span>
                }
              </div>
            </td>
            <td>
              <label class="td-label">Kết quả</label>
              <div class="td-value">
                <a class="icon-text has-text-weight-semibold has-text-info" @onclick="() => ShowKeys(okr.id)">
                  <span>@okr.key_results.Count kết quả</span>
                  <span class="icon">
                    <i class="material-icons-outlined is-size-5">
                      @(showKey ? "arrow_drop_down" : "arrow_right")
                    </i>
                  </span>
                </a>
              </div>
            </td>
            <td>
              <label class="td-label">Tiến độ</label>
              <div class="td-value">
                <div class="progress_has_value">
                  <progress class="progress is-small @okrColor" value="@progress" max="100"></progress>
                  <span>@string.Format("{0:0}%", progress)</span>
                </div>
              </div>
            </td>
            <td align="center">
              <label class="td-label">Thay đổi</label>
              <div class="td-value has-text-weight-semibold">
                @string.Format("{0:0}%", progress - okr.progress_prev)
              </div>
            </td>
            <td align="center">
              <label class="td-label">Ngày tạo</label>
              <div class="td-value">
                @string.Format("{0:dd/MM/yyyy}", new DateTime(okr.date_create))
              </div>
            </td>
          </tr>

          if (showKey)
          {
            foreach (var kr in okr.key_results)
            {
              var confident = DbOkr.Confident(kr.confident);
              <tr>
                <td class="pl-4">
                  @kr.name
                </td>
                <td class="pl-2">
                  @if (!string.IsNullOrEmpty(kr.link))
                  {
                    <a class="icon-text has-text-link" href="@kr.link" target="_blank">
                      <span class="icon is-small">
                        <i class="material-icons-outlined">attach_file</i>
                      </span>
                      <span>Kết quả</span>
                    </a>
                  }
                </td>
                <td>
                  <label class="td-label">Đạt được</label>
                  <div class="td-value">
                    <span class="has-text-success" title="@string.Format("{0:0,0.000} / {1:0,0.000}", kr.result, kr.target)">
                      @Shared.ConvertCurrency(kr.result)/@Shared.ConvertCurrency(kr.target)
                    </span>
                    <span class="is-pulled-right">@kr.unit</span>
                  </div>
                </td>
                <td align="center">
                  <label class="td-label">Thay đổi</label>
                  <div class="td-value">
                    @string.Format("{0:0}%", Shared.Progress(kr.change, kr.target))
                  </div>
                </td>
                <td align="center">
                  <label class="td-label">Tự tin</label>
                  <div class="td-value has-text-weight-semibold">
                    <span class="@confident.color">@confident.name</span>
                  </div>
                </td>
              </tr>
            }
          }
        }
      </tbody>
    </table>
  </div>
</section>

@if(!CheckAccess())
{
  <div class="modal is-active">
    <div class="modal-background"></div>
    <div class="modal-content" style="max-width: 360px;">
      <div class="box has-text-centered pt-5">
        <span class="icon is-large has-text-danger">
          <i class="material-icons-outlined is-size-1">error_outline</i>
        </span>
        <div class="is-size-6 py-4 has-text-weight-semibold">
          @msgAccess
        </div>
      </div>
    </div>
  </div>
}

@code {
  [CascadingParameter]
  public LayoutMain Layout { get; set; }

  private bool _loaded = false;
  private string _title = "Tổng quan OKRs";

  private List<DepartmentModel> dataList = new();
  private List<OkrModel> okrList = new();
  private List<string> okrsShow = new();

  private List<DepartmentModel.SelectList> departments = new();
  private string filterDepartment = string.Empty;
  private UserModel filterUser = new();
  private bool listMode = true;

  protected override void OnInitialized()
  {
    filterUser = Layout.User;
    departments.AddRange(DbDepartment.GetSelectList(Layout.Company.id, null, 0, null));
    dataList = DbDepartment.GetList(Layout.Company.id, null);
    Search();
    ListenCallback();
  }

  private async Task ChangeMode(bool value)
  {
    listMode = value;
  }

  private string msgAccess = string.Empty;
  private bool CheckAccess()
  {
    return ProductService.CheckAccess(Layout.Company, Layout.User, "okrs", out msgAccess);
  }

  private void ChangeFilterDepartment(string value)
  {
    filterDepartment = value;
  }

  private async Task ChangeFilterUser(string value)
  {
    if(!string.IsNullOrEmpty(value))
    {
      filterUser = await DbUser.Get(Layout.Company.id, value);
      Search();
    }
  }

  private void UserSelected(UserModel item)
  {
    filterUser = item;
    Search();
  }

  private void Search()
  {
    _loaded = false;
    okrList = DbOkr.GetList(Layout.Company.id, Layout.CycleId, filterUser.id);
    _loaded = true;
  }

  private void ShowKeys(string id)
  {
    if (okrsShow.Contains(id))
      okrsShow.Remove(id);
    else
      okrsShow.Add(id);
  }

  public void ListenCallback()
  {
    MessagingCenter.Subscribe<_OkrOverview, UserModel>(this, "okrs_" + Layout.User.id, (sender, value) =>
    {
      UserSelected(value);
      InvokeAsync(StateHasChanged);
    });
  }
}