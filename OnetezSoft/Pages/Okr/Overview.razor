@page "/okr/overview"
@inject IJSRuntime JSRuntime
@inject NavigationManager navigation

<PageTitle>@_title</PageTitle>

<section class="p-4 @(_loaded ? "" : "is-loading")">
  <div class="card p-5 p-4-mobile">
    <ul class="columns is-vcentered is-variable is-2 is-mobile is-multiline mb-5">
      <li class="column is-full-mobile">
        <h1 class="title is-5 has-text-info">
          TỔNG QUAN OKRs
        </h1>
      </li>
      <li class="column is-one-quarter-tablet is-half-mobile">
        <div class="select is-fullwidth">
          <select @onchange="ChangeDepartment" class="is-family-code">
            <option value="">Tất cả phòng ban</option>
            @foreach (var item in departments)
            {
              <option value="@item.id">@item.name</option>
            }
          </select>
        </div>
      </li>
      <li class="column is-one-quarter-tablet is-half-mobile">
        <div class="control has-icons-right has_suggest">
          <input class="input" type="text" placeholder="Nhập tên nhân viên..."
                 autocomplete="off" @bind="UserSearch" @bind:event="oninput" />
          <ul class="suggest">
            @foreach (var item in userSuggests)
            {
              <li class="rsitem" @onclick="() => UserSelected(item)">
                <div class="user_item">
                  <img class="image is-24x24 mr-2" src="@item.avatar" alt="IMG">
                  <span>@item.FullName</span>
                </div>
              </li>
            }
          </ul>
          <span class="icon is-right">
            <i class="material-icons-outlined">search</i>
          </span>
        </div>
      </li>
    </ul>
    <ul class="columns is-multiline is-mobile is-variable is-1 px-4 my-1 is-size-7 is-hidden-mobile">
      <li class="column">
      </li>
      <li class="column is-3">
        Quản lý
      </li>
      <li class="column is-narrow">
        <div style="width: 100px;">Số nhân sự</div>
      </li>
      <li class="column is-2 has-text-right">
        Tiến độ OKRs
      </li>
    </ul>
    @foreach (var child in dataList)
    {
      <ComponentOkrView CompanyId="@Layout.Company.id" CycleId="@Layout.CycleId" UserId="@Layout.User.id"
                      UserList="@Layout.UserList" Current="child" ShowChilds="true" />
    }
  </div>
</section>

<section class="p-4 @(_loaded ? "" : "is-loading")">
  <div class="card p-5 p-4-mobile">
    <ul class="columns is-vcentered is-variable is-2">
      <li class="column">
        <div class="user_item">
          <img class="image is-32x32 mr-2" src="@filterUser.avatar" alt="IMG">
          <span class="title is-5 is-size-6-mobile has-text-info">
            @filterUser.FullName - OKRs Cá Nhân
          </span>
        </div>
      </li>
    </ul>
    <table class="table is-fullwidth is-noborder is-responsive mt-5">
      <thead>
        <tr>
          <th>Mục tiêu</th>
          <th width="200px">Kết Quả Then Chốt</th>
          <th width="150px" align="center">Tiến độ</th>
          <th width="100px" align="center">Thay đổi</th>
          <th width="100px" align="center">Ngày tạo</th>
        </tr>
      </thead>
      <tbody>
        @foreach (var okr in okrList)
        {
          var showKey = okrsShow.Contains(okr.id);
          var progress = DbOkr.GetProgress(okr.key_results);
          var okrColor = Shared.ProgressColor(progress);

          <tr>
            <td>
              <div class="is-flex">
                <span class="has-text-weight-semibold has-text-link">
                  @okr.name
                </span>
                @if (okr.done)
                {
                  <span class="ml-1 icon" title="OKRs đã hoàn thành">
                    <i class="material-icons is-size-6 has-text-success">check_circle</i>
                  </span>
                }
              </div>
            </td>
            <td>
              <label class="td-label">Kết quả</label>
              <div class="td-value">
                <a class="icon-text has-text-weight-semibold has-text-info" @onclick="() => ShowKeys(okr.id)">
                  <span>@okr.key_results.Count kết quả</span>
                  <span class="icon">
                    <i class="material-icons-outlined is-size-5">
                      @(showKey ? "arrow_drop_down" : "arrow_right")
                    </i>
                  </span>
                </a>
              </div>
            </td>
            <td>
              <label class="td-label">Tiến độ</label>
              <div class="td-value">
                <div class="progress_has_value">
                  <progress class="progress is-small @okrColor" value="@progress" max="100"></progress>
                  <span>@Shared.ConvertNumber(progress)%</span>
                </div>
              </div>
            </td>
            <td align="center">
              <label class="td-label">Thay đổi</label>
              <div class="td-value has-text-weight-semibold">
                @Shared.ConvertNumber(progress - okr.progress_prev)%
              </div>
            </td>
            <td align="center">
              <label class="td-label">Ngày tạo</label>
              <div class="td-value">
                @string.Format("{0:dd/MM/yyyy}", new DateTime(okr.date_create))
              </div>
            </td>
          </tr>

          if (showKey)
          {
            foreach (var kr in okr.key_results)
            {
              var confident = DbOkr.Confident(kr.confident);

              <tr>
                <td class="pl-4">
                  @kr.name
                </td>
                <td class="pl-2">
                  <a class="icon-text has-text-link" @onclick="() => ShowTask(okr, kr)">
                    <span class="icon is-small">
                      <i class="material-icons-outlined">task</i>
                    </span>
                    <span>Hành động</span>
                  </a>
                  @if (!string.IsNullOrEmpty(kr.link))
                  {
                    <a class="icon-text ml-2 has-text-link" href="@kr.link" target="_blank">
                      <span class="icon is-small">
                        <i class="material-icons-outlined">attach_file</i>
                      </span>
                      <span>Kết quả</span>
                    </a>
                  }
                </td>
                <td>
                  <label class="td-label">Đạt được</label>
                  <div class="td-value">
                    <span class="has-text-success" title="@string.Format("{0:0,0}/{1:0,0}", kr.result, kr.target)">
                      @Shared.ConvertNumber(kr.result)/@Shared.ConvertNumber(kr.target)
                    </span>
                    <span class="is-pulled-right">@kr.unit</span>
                  </div>
                </td>
                <td align="center">
                  <label class="td-label">Thay đổi</label>
                  <div class="td-value">
                    @Shared.ConvertNumber(Shared.Progress(kr.change, kr.target))%
                  </div>
                </td>
                <td align="center">
                  <label class="td-label">Tự tin</label>
                  <div class="td-value has-text-weight-semibold">
                    <span class="@confident.color">@confident.name</span>
                  </div>
                </td>
              </tr>
            }
          }
        }
      </tbody>
    </table>
  </div>
</section>

<TaskPopup Okr="taskOkr" Kr="taskKr" />

@if(!CheckAccess())
{
  <div class="modal is-active">
    <div class="modal-background"></div>
    <div class="modal-content" style="max-width: 360px;">
      <div class="box has-text-centered pt-5">
        <span class="icon is-large has-text-danger">
          <i class="material-icons-outlined is-size-1">error_outline</i>
        </span>
        <div class="is-size-6 py-4 has-text-weight-semibold">
          @msgAccess
        </div>
      </div>
    </div>
  </div>
}

@code {
  [CascadingParameter]
  public LayoutMain Layout { get; set; }

  private bool _loaded = false;
  private bool _success = false;
  private string _title = "Tổng quan OKRs";

  private List<DepartmentModel> dataList = new();
  private List<OkrModel> okrList = new();
  private List<string> okrsShow = new();

  private List<DepartmentModel.SelectList> departments = new();
  private string filterDepartment = string.Empty;
  private string filterUserName = string.Empty;
  private UserModel filterUser = new();
  private List<UserModel> userSuggests = new();

  private OkrModel taskOkr = null;
  private OkrModel.KeyResult taskKr = null;

  protected override void OnInitialized()
  {
    filterUser = Layout.User;
    departments.AddRange(DbDepartment.GetSelectList(Layout.Company.id, null, 0, null));
    dataList = DbDepartment.GetList(Layout.Company.id, null);
    Search();
    ListenCallback();
  }

  protected override void OnAfterRender(bool firstRender)
  {
    taskOkr = null;
    taskKr = null;
  }

  private string msgAccess = string.Empty;
  private bool CheckAccess()
  {
    return ProductService.CheckAccess(Layout.Company, Layout.User, "okrs", out msgAccess);
  }

  private void ChangeDepartment(ChangeEventArgs e)
  {
    filterDepartment = e.Value.ToString();
    filterUserName = string.Empty;
    userSuggests = new();
  }

  private string UserSearch
  {
    get => filterUserName;
    set
    {
      filterUserName = value;
      userSuggests = new();
      if (!string.IsNullOrEmpty(value))
      {
        foreach (var item in Layout.UserList)
        {
          bool check = true;
          if (!string.IsNullOrEmpty(filterDepartment))
            if (item.departments_id == null || !item.departments_id.Contains(filterDepartment))
              check = false;
          if (!Handled.Shared.SearchKeyword(filterUserName, item.FullName))
            check = false;

          if (check)
            userSuggests.Add(item);
        }
      }
    }
  }

  private void UserSelected(UserModel item)
  {
    filterUser = item;
    filterUserName = string.Empty;
    userSuggests = new();
    Search();
  }

  private void Search()
  {
    _loaded = false;
    okrList = DbOkr.GetList(Layout.Company.id, Layout.CycleId, filterUser.id);
    _loaded = true;
  }

  private void ShowKeys(string id)
  {
    if (okrsShow.Contains(id))
      okrsShow.Remove(id);
    else
      okrsShow.Add(id);
  }

  private void ShowTask(OkrModel okr, OkrModel.KeyResult kr)
  {
    taskOkr = okr;
    taskKr = kr;
  }

  public void ListenCallback()
  {
    MessagingCenter.Subscribe<ComponentOkrView, UserModel>(this, "okrs_" + Layout.User.id, (sender, value) =>
    {
      UserSelected(value);
      InvokeAsync(StateHasChanged);
    });
  }
}