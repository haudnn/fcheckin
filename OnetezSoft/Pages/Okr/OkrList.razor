@page "/okr/setup/detail"
@inject IJSRuntime JSRuntime
@inject NavigationManager navigation

<PageTitle>@_title</PageTitle>

@if (!string.IsNullOrEmpty(_message))
{
  <div id="notify">
    <div class="notification is-@(_success ? "success" : "danger")">
      <button class="delete" @onclick="() => _message = string.Empty"></button>
      <p>@((MarkupString)_message)</p>
    </div>
  </div>
}

@if (current != null)
{
  <section class="p-4">
    <div class="card p-5 p-4-mobile">
      <ul class="columns is-vcentered is-variable is-2 is-mobile mb-5">
        <li class="column">
          <h1 class="title is-5 is-size-6-mobile has-text-info">
            @(string.IsNullOrEmpty(current.id) ? "TẠO OKRs MỚI" : "CHỈNH SỬA OKRs")
          </h1>
        </li>
        <li class="column is-narrow">
          <a class="button is-outlined is-danger" @onclick="Cancel">
            <span class="icon">
              <i class="material-icons-outlined is-size-6">cancel</i>
            </span>
            <span>Hủy tạo</span>
          </a>
        </li>
      </ul>

      <ul class="columns is-multiline is-vcentered is-mobile">
        <li class="column is-one-fifth-tablet is-full-mobile">
          <label class="label has-text-weight-bold">Mục tiêu của bạn:</label>
        </li>
        <li class="column is-four-fifths-tablet is-full-mobile">
          <input @bind="current.name" type="text" class="input has-text-weight-semibold is_bg" placeholder="Bắt buộc nhập..." />
        </li>
        <li class="column is-one-fifth-tablet is-one-third-mobile">
          <label class="label has-text-weight-bold">OKRs cấp trên</label>
        </li>
        <li class="column is-two-fifths-tablet is-two-thirds-mobile">
          <div class="select is-fullwidth is_bg">
            <select @bind="current.parent">
              <option>- Chọn OKRs cấp trên -</option>
              @foreach (var user in managerList)
              {
                var okrList = DbOkr.GetList(Layout.Company.id, Layout.CycleId, user.id);
                <optgroup label="@user.FullName">
                  @foreach (var okr in okrList)
                  {
                    <option value="@okr.id">@okr.name</option>
                  }
                </optgroup>
              }
            </select>
          </div>
        </li>
        <li class="column is-one-fifth-tablet is-full-mobile">
          <div class="field is-grouped">
            <div class="control">
              <label class="label has-text-weight-bold">Loại:</label>
            </div>
            <div class="control is-expanded">
              <div class="select is-fullwidth is_bg">
                <select @bind="current.type">
                  @foreach (var sl in DbOkr.Type())
                  {
                    <option value="@sl.id">@sl.name</option>
                  }
                </select>
              </div>
            </div>
          </div>
        </li>
        <li class="column is-full">
          <hr class="m-0" />
        </li>
      </ul>

      <ul class="columns is-multiline is-mobile">
        @foreach (var kr in current.key_results)
        {
          <li class="column is-one-fifth-tablet is-full-mobile">
            <label class="label has-text-weight-bold pt-2">Kết quả then chốt:</label>
          </li>
          <li class="column is-four-fifths-tablet is-full-mobile">
            <div class="field has-addons">
              <div class="control is-expanded">
                <input @bind="kr.name" type="text" class="input is_bg" placeholder="Bắt buộc nhập..." />
              </div>
              <div class="control">
                <a class="button is-danger" title="Xóa kết quả then chốt" @onclick="() => DeleteKey(kr)">
                  <span class="icon">
                    <i class="material-icons-outlined is-size-5">close</i>
                  </span>
                </a>
              </div>
            </div>
          </li>
          <li class="column is-one-fifth-tablet is-one-third-mobile">
            <label class="label has-text-weight-bold pt-2">Mục tiêu:</label>
          </li>
          <li class="column is-two-fifths-tablet is-two-thirds-mobile">
            <div class="field is-grouped">
              <div class="control is-expanded">
                <NumericTextBox @bind-Value="kr.target" Class="input is_bg" Format="###,##0.000"></NumericTextBox>
              </div>
              <div class="control" style="width: 100px;">
                <input @bind="kr.unit" type="text" class="input is_bg" placeholder="Đơn vị tính" />
              </div>
            </div>
          </li>
          <li class="column is-two-fifths-tablet is-full-mobile">
            <div class="field is-grouped">
              <div class="control">
                <label class="label has-text-weight-bold">Kết quả:</label>
              </div>
              <div class="control is-expanded">
                <input @bind="kr.link" type="text" class="input is_bg" placeholder="Nhập link kết quả..." />
              </div>
            </div>
          </li>
          <li class="column is-one-fifth-tablet is-half-mobile">
            <div class="label has-text-weight-bold pt-2">Cá nhân liên kết chéo:</div>
          </li>
          <li class="column is-four-fifths-tablet is-full-mobile">
            <ul class="columns is-multiline">
              <li class="column is-half">
                <UserSearchCross Kr="kr" UserList="Layout.UserList" OnAddCross="ChangeCross" />
              </li>

              @foreach (var cross in kr.cross_links)
              {
                var user = Layout.UserList.SingleOrDefault(x => x.id == cross.user);
                var okrList = DbOkr.GetList(Layout.Company.id, Layout.CycleId, cross.user);

                <li class="column is-half">
                  <div class="field has-addons">
                    <div class="control is-expanded">
                      <div class="select is-fullwidth is_bg">
                        <select @bind="cross.okr">
                          <option>
                            - chọn OKRs của @(user != null ? user.FullName : cross.user) -
                          </option>
                          @foreach (var okr in okrList)
                          {
                            <option value="@okr.id">@okr.name</option>
                          }
                        </select>
                      </div>
                    </div>
                    <div class="control">
                      <a class="button is_bg has-text-danger" title="Xóa liên kết chéo"
                        @onclick="() => DeleteCross(kr, cross)">
                        <span class="icon">
                          <i class="material-icons-outlined is-size-5">close</i>
                        </span>
                      </a>
                    </div>
                  </div>
                </li>
              }
            </ul>
          </li>
        }

        <li class="column is-full">
          <hr class="m-0" />
        </li>
      </ul>

      <div class="field is-grouped is-grouped-right is-grouped-multiline mt-5">
        <div class="control">
          <a class="button" @onclick="AddKey">
            <span class="icon">
              <i class="material-icons-outlined is-size-6">add</i>
            </span>
            <span>Thêm</span>
            <span class="is-hidden-mobile ml-1">kết quả</span>
          </a>
        </div>
        <div class="control">
          <a class="button is-link" @onclick="Update">
            <span class="icon">
              <i class="material-icons-outlined is-size-6">done</i>
            </span>
            <span>Cập nhật</span>
            <span class="is-hidden-mobile ml-1">OKRs</span>
          </a>
        </div>
        <div class="control">
          <a class="button is-danger" @onclick="() => DeleteItem(current)">
            <span class="icon">
              <i class="material-icons-outlined is-size-6">delete</i>
            </span>
            <span>Xóa</span>
            <span class="is-hidden-mobile ml-1">OKRs</span>
          </a>
        </div>
      </div>
    </div>
  </section>
}

<section class="p-4 @(_loaded ? "" : "is-loading")">
  <div class="card p-5 p-4-mobile">
    <ul class="columns is-vcentered is-variable is-2 is-mobile">
      <li class="column">
        <h1 class="title is-5 is-size-6 has-text-info">
          OKRs - CÁ NHÂN
        </h1>
      </li>
      <li class="column is-narrow">
        <a class="button" @onclick="() => EditItem(null)">
          <span class="icon">
            <i class="material-icons-outlined is-size-6">add</i>
          </span>
          <span>Thêm OKRs</span>
        </a>
      </li>
    </ul>
    <table class="table is-fullwidth is-noborder is-responsive mt-5">
      <thead>
        <tr>
          <th>Mục tiêu</th>
          <th width="160px">Kết Quả Then Chốt</th>
          <th width="200px" align="center">Tiến độ</th>
          <th width="90px" align="center">Thay đổi</th>
          <th width="90px" align="center">Ngày tạo</th>
        </tr>
      </thead>
      <tbody>
        @foreach (var okr in dataList)
        {
          var showKey = okrsShow.Contains(okr.id);
          var progress = DbOkr.GetProgress(okr.key_results);
          var okrColor = Shared.ProgressColor(progress);

          <tr>
            <td>
              <div class="is-flex">
                <a class="has-text-weight-semibold" @onclick="() => EditItem(okr)" title="Chỉnh sửa OKRs">
                  @okr.name
                </a>
                @if (okr.done)
                {
                  <span class="ml-1 icon" title="OKRs đã hoàn thành">
                    <i class="material-icons is-size-6 has-text-success">check_circle</i>
                  </span>
                }
              </div>
            </td>
            <td>
              <label class="td-label">Kết quả</label>
              <div class="td-value">
                <a class="icon-text has-text-weight-semibold has-text-info" @onclick="() => ShowKeys(okr.id)">
                  <span>@okr.key_results.Count kết quả</span>
                  <span class="icon">
                    <i class="material-icons-outlined is-size-5">
                      @(showKey ? "arrow_drop_down" : "arrow_right")
                    </i>
                  </span>
                </a>
              </div>
            </td>
            <td>
              <label class="td-label">Tiến độ</label>
              <div class="td-value">
                <div class="progress_has_value">
                  <progress class="progress is-small @okrColor" value="@progress" max="100"></progress>
                  <span>@string.Format("{0:0}%", progress)</span>
                </div>
              </div>
            </td>
            <td align="center">
              <label class="td-label">Thay đổi</label>
              <div class="td-value has-text-weight-semibold">
                @string.Format("{0:0}%", progress - okr.progress_prev)
              </div>
            </td>
            <td align="center">
              <label class="td-label">Ngày tạo</label>
              <div class="td-value">
                @string.Format("{0:dd/MM/yyyy}", new DateTime(okr.date_create))
              </div>
            </td>
          </tr>

          if (showKey)
          {
            foreach (var kr in okr.key_results)
            {
              var confident = DbOkr.Confident(kr.confident);
              <tr>
                <td class="pl-4">
                  @kr.name
                </td>
                <td class="pl-2">
                  <a class="icon-text has-text-link is-hidden" @onclick="() => ShowTask(okr, kr)">
                    <span class="icon is-small">
                      <i class="material-icons-outlined">task</i>
                    </span>
                    <span>Hành động</span>
                  </a>
                  @if (!string.IsNullOrEmpty(kr.link))
                  {
                    <a class="icon-text has-text-link" href="@kr.link" target="_blank">
                      <span class="icon is-small">
                        <i class="material-icons-outlined">attach_file</i>
                      </span>
                      <span>Kết quả</span>
                    </a>
                  }
                </td>
                <td>
                  <label class="td-label">Đạt được</label>
                  <div class="td-value">
                    <span class="has-text-success" title="@string.Format("{0:0,0.000} / {1:0,0.000}", kr.result, kr.target)">
                      @Shared.ConvertCurrency(kr.result)/@Shared.ConvertCurrency(kr.target)
                    </span>
                    <span class="is-pulled-right">@kr.unit</span>
                  </div>
                </td>
                <td align="center">
                  <label class="td-label">Thay đổi</label>
                  <div class="td-value">
                    @string.Format("{0:0}%", Shared.Progress(kr.change, kr.target))
                  </div>
                </td>
                <td align="center">
                  <label class="td-label">Tự tin</label>
                  <div class="td-value has-text-weight-semibold">
                    <span class="@confident.color">@confident.name</span>
                  </div>
                </td>
              </tr>
            }
          }
        }
      </tbody>
    </table>
  </div>
</section>

<TaskPopup Okr="taskOkr" Kr="taskKr" />

@if(!CheckAccess())
{
  <div class="modal is-active">
    <div class="modal-background"></div>
    <div class="modal-content" style="max-width: 360px;">
      <div class="box has-text-centered pt-5">
        <span class="icon is-large has-text-danger">
          <i class="material-icons-outlined is-size-1">error_outline</i>
        </span>
        <div class="is-size-6 py-4 has-text-weight-semibold">
          @msgAccess
        </div>
      </div>
    </div>
  </div>
}

@code {
  [CascadingParameter]
  public LayoutMain Layout { get; set; }

  private bool _loaded = false;
  private bool _success = false;
  private string _message = string.Empty;
  private string _title = "OKRs - Công bố mục tiêu";

  private List<OkrModel> dataList = new();
  private OkrModel current = null;

  private List<string> okrsShow = new();
  private List<UserModel> managerList = new();

  private List<UserModel> userSuggests = new();
  private string filterUserName = string.Empty;

  private OkrModel taskOkr = null;
  private OkrModel.KeyResult taskKr = null;

  protected override void OnInitialized()
  {
    managerList = DbDepartment.GetManagerList(Layout.Company.id, Layout.User);
    GetList();
    _loaded = true;
  }

  protected override void OnAfterRender(bool firstRender)
  {
    taskOkr = null;
    taskKr = null;
    _message = string.Empty;
  }

  private string msgAccess = string.Empty;
  private bool CheckAccess()
  {
    return ProductService.CheckAccess(Layout.Company, Layout.User, "okrs", out msgAccess);
  }

  private void GetList()
  {
    dataList = DbOkr.GetList(Layout.Company.id, Layout.CycleId, Layout.User.id);
  }

  private string UserSearch
  {
    get => filterUserName;
    set
    {
      filterUserName = value;
      userSuggests = new();
      if (!string.IsNullOrEmpty(value))
      {
        foreach (var item in Layout.UserList)
        {
          if (Handled.Shared.SearchKeyword(filterUserName, item.FullName))
            userSuggests.Add(item);
        }
      }
    }
  }

  private void ShowKeys(string id)
  {
    if (okrsShow.Contains(id))
      okrsShow.Remove(id);
    else
      okrsShow.Add(id);
  }

  private void ShowTask(OkrModel okr, OkrModel.KeyResult kr)
  {
    taskOkr = okr;
    taskKr = kr;
  }

  private async Task ChangeCross(string id)
  {
    await JSRuntime.InvokeAsync<string>("console.log", id);
  }

  private void DeleteCross(OkrModel.KeyResult kr, OkrModel.CrossLink item)
  {
    kr.cross_links.Remove(item);
  }

  private void AddKey()
  {
    var item = new OkrModel.KeyResult()
      {
        id = Mongo.RandomId(),
        cross_links = new()
      };
    current.key_results.Add(item);
  }

  private async Task DeleteKey(OkrModel.KeyResult item)
  {
    if (!await JSRuntime.InvokeAsync<bool>("confirm", $"Bạn có chắc muốn xóa kết quả then chốt: {item.name} ?"))
      return;

    current.key_results.Remove(item);
  }

  private async Task DeleteItem(OkrModel item)
  {
    if (!await JSRuntime.InvokeAsync<bool>("confirm", $"Bạn có chắc muốn xóa OKRs: {item.name} ?"))
      return;

    item.delete = true;
    await DbOkr.Update(Layout.Company.id, item);
    current = null;
    dataList.Remove(item);
  }

  private void EditItem(OkrModel item)
  {
    if (item == null)
    {
      current = new()
        {
          type = 2,
          cycle = Layout.CycleId,
          user_create = Layout.User.id,
          key_results = new()
        };
      AddKey();
    }
    else
    {
      current = item;
    }
  }

  private void Cancel()
  {
    current = null;
    GetList();
  }

  private async Task Update()
  {
    _success = false;
    _message = string.Empty;

    if (string.IsNullOrEmpty(current.name))
    {
      _message = "Nhập các mục tiêu của bạn !";
      await Task.Delay(5000);
      _message = string.Empty;
    }
    else if (string.IsNullOrEmpty(current.name.Trim()))
    {
      _message = "Nhập các mục tiêu của bạn !";
      await Task.Delay(5000);
      _message = string.Empty;
    }
    else if (current.key_results.Where(x => string.IsNullOrEmpty(x.name)).Count() > 0)
    {
      _message = "Nhập đầy đủ tiêu đề của các kết quả then chốt hoặc xóa kết quả then chốt không cần thiết !";
      await Task.Delay(10000);
      _message = string.Empty;
    }
    else if (current.key_results.Where(x => string.IsNullOrEmpty(x.name.Trim())).Count() > 0)
    {
      _message = "Nhập đầy đủ tiêu đề của các kết quả then chốt hoặc xóa kết quả then chốt không cần thiết !";
      await Task.Delay(10000);
      _message = string.Empty;
    }
    else if (current.key_results.Where(x => x.target == 0).Count() > 0
      || current.key_results.Where(x => string.IsNullOrEmpty(x.unit)).Count() > 0)
    {
      _message = "Nhập đầy đủ mục tiêu của các kết quả then chốt !";
      await Task.Delay(5000);
      _message = string.Empty;
    }
    else
    {
      // Xóa check-in nháp
      if (await CompareCheckin() == false)
        return;

      // Remove CrossLinks not set OKRs
      foreach (var kr in current.key_results)
        kr.cross_links.RemoveAll(x => string.IsNullOrEmpty(x.okr));

      if (string.IsNullOrEmpty(current.id))
      {
        // Create OKRs on DB
        await DbOkr.Create(Layout.Company.id, current);
      }
      else
      {
        // Update OKRs on DB
        await DbOkr.Update(Layout.Company.id, current);
      }

      current = null;
      GetList();
    }
  }

  private async Task<bool> CompareCheckin()
  {
    var checkinDraft = DbOkrCheckin.GetDraft(Layout.Company.id, current.id);
    var okrOld = await DbOkr.Get(Layout.Company.id, current.id);
    if (okrOld != null && checkinDraft.Count > 0)
    {
      if(okrOld.key_results.Count < current.key_results.Count)
      {
        if (!await JSRuntime.InvokeAsync<bool>("confirm", "OKRs này đang tồn tại một bản checkin nháp. Nếu xác nhận tạo KRs mới, bản checkin nháp của OKRs này sẽ bị hủy bỏ. \nBạn có chắc chắn muốn tạo không?"))
          return false;

        // Xóa các bản check-in nháp
        foreach (var checkin in checkinDraft)
          await DbOkrCheckin.Delete(Layout.Company.id, checkin.id);
        current.status_checkin = 0;
      }
      else if(okrOld.key_results.Count > current.key_results.Count)
      {
        if (!await JSRuntime.InvokeAsync<bool>("confirm", "OKRs này đang tồn tại một bản checkin nháp. Nếu xác nhận xoá KRs, bản checkin nháp của OKRs này sẽ bị hủy bỏ. \nBạn có chắc chắn muốn xoá không? "))
          return false;

        // Xóa các bản check-in nháp
        foreach (var checkin in checkinDraft)
          await DbOkrCheckin.Delete(Layout.Company.id, checkin.id);
        current.status_checkin = 0;
      }
    }
    return true;
  }
}