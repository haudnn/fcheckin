@page "/hrm/setup/user-shift"
@inject IJSRuntime JSRuntime
@inject NavigationManager navigation

<PageTitle>@_title</PageTitle>

@if (_access)
{
  <section class="p-4">
    <div class="card p-5">
      <ul class="columns is-vcentered is-multiline is-variable is-2 mb-3">
        <li class="column">
          <h1 class="title is-5 has-text-info is-uppercase">
            @_title
          </h1>
        </li>
        <li class="column is-narrow">
          <div class="select is-fullwidth">
            <select @onchange="ChangeCompany">
              <option value="">Tất cả công ty</option>
              @foreach (var item in companys)
              {
                if(filterCompany == item.id)
                {
                  <option value="@item.id" selected>@item.name</option>
                }
                else
                {
                  <option value="@item.id">@item.name</option>
                }
              }
            </select>
          </div>
        </li>
        <li class="column is-narrow">
          <div class="select is-fullwidth">
            <select @onchange="ChangeDepartment">
              <option value="">Phòng ban</option>
              @foreach (var item in departments)
              {
                <option value="@item.id">@item.name</option>
              }
            </select>
          </div>
        </li>
        <li class="column is-one-fifth">
          <form class="control has-icons-right" @onsubmit="GetList">
            <input @bind="filterKeyword" class="input" type="text" placeholder="Tên nhân viên...">
            <span class="icon is-right">
              <i class="material-icons-outlined is-size-5">search</i>
            </span>
          </form>
        </li>
        @if(editStep == 0)
        {
          <li class="column is-narrow">
            <a class="button is-link" @onclick="() => ChangeStep(1)">
              <span>Phân ca</span>
            </a>
          </li>
        }
      </ul>
      <div class="scrolly" style="max-height: calc(100vh - 250px);">
        <table class="table is-fullwidth is-vcentered is-responsive mt-5">
          <thead>
            <tr>
              @if(editStep > 0)
              {
                <th width="30px" align="center">
                  <input type="checkbox" @onchange="CheckAll" />
                </th>
              }
              <th width="100px">Mã nhân viên</th>
              <th width="18%">Tên nhân viên</th>
              <th>Công ty / Phòng ban</th>
              @for (int i = 2; i <= 8; i++)
              {
                <th width="100px" align="center">
                  @(i == 8 ? "Chủ nhật" : "Thứ " + i)
                </th>
              }
            </tr>
          </thead>
          <tbody>
            @foreach (var user in userList)
            {
              var company = companys.FirstOrDefault(x => x.id == user.company_id);
              var department = departments.FirstOrDefault(x => x.id == user.department_id);
              var userShift = dataList.FirstOrDefault(x => x.id == user.id);
              <tr>
                @if(editStep > 0)
                {
                  <td align="center">
                    @if (checkList.Contains(user.id))
                    {
                      <input type="checkbox" @onchange="() => CheckItem(user.id)" checked />
                    }
                    else
                    {
                      <input type="checkbox" @onchange="() => CheckItem(user.id)" />
                    }
                  </td>
                }
                <td>
                  <a @onclick="() => EditItem(user.id)">@user.id</a>
                </td>
                <td>
                  <div class="user_item">
                    <img class="image is-24x24 mr-2" src="@user.avatar" alt="IMG" />
                    <span class="text_1_line">@user.FullName</span>
                  </div>
                </td>
                <td>
                  <div class="text_1_line">
                    <span>@(company != null ? company.name : user.company_id)</span>
                    <span>/</span>
                    <span>@(department != null ? department.name : user.department_id)</span>
                  </div>
                </td>
                @if(userShift == null)
                {
                  <td class="is-size-7 has-text-danger" colspan="7">
                    Chưa có phân ca
                  </td>
                }
                else if(userShift.is_flexible)
                {
                  <td class="is-size-7 has-text-link" colspan="7">
                    Chế độ làm việc linh động
                  </td>
                }
                else
                {
                  foreach (var item in userShift.shifts)
                  {
                    var morning = shiftList.FirstOrDefault(x => x.id == item.morning);
                    var afternoon = shiftList.FirstOrDefault(x => x.id == item.afternoon);
                    <td class="is-size-7" align="center">
                      @if(morning == null && afternoon == null)
                      {
                        <div>-</div>
                      }
                      else
                      {
                        <div>@(morning == null ? "-" : morning.checkin + " - " + morning.checkout)</div>
                        <div>@(afternoon == null ? "-" : afternoon.checkin + " - " + afternoon.checkout)</div>
                      }
                    </td> 
                  }
                }
              </tr>
            }
          </tbody>
        </table>
        @if(userList.Count == 0)
        {
          <div class="has-text-centered py-6">
            Không tìm thấy dữ liệu phù hợp!
          </div>
        }
      </div>
    </div>
  </section>
  <UserShiftPopup model="editItem" shifts="shiftList" OnUpdate="OnUpdate" />
  @if(editStep > 0)
  {
    <section class="buttons_footer px-5 py-3">
      <div class="columns is-multiline is-mobile is-vcentered">
        <div class="column">
          @checkList.Count nhân viên được chọn
        </div>
        <div class="column is-narrow">
          <div class="buttons">
            <a class="button" @onclick="() => ChangeStep(0)">
              Hủy
            </a>
            <a class="button is-link" @onclick="() => ChangeStep(2)">
              Tiếp tục
            </a>
          </div>
        </div>
      </div>
    </section>
  }
}
else
{
  <PopupNoRole />
}

@code {
  [CascadingParameter]
  public LayoutMain Layout { get; set; }
  private string _title = "Phân ca làm việc";
  private bool _access = false;
  private List<HrmUserShiftModel> dataList = new();
  private List<UserModel> userList = new();
  private List<HrmOptionModel> companys = new();
  private List<HrmOptionModel> departments = new();
  private List<HrmWorkShiftModel> shiftList = new();
  private HrmUserShiftModel editItem = null;
  private string filterKeyword = string.Empty;
  private string filterCompany = string.Empty;
  private string filterDepartment = string.Empty;
  private List<string> checkList = new();
  private int editStep = 0;

  protected override async Task OnInitializedAsync()
  {
    // Quyền truy cập trang
    _access = Layout.User.role == 1 || Layout.User.role_manage.timekeeping;

    // Set dữ liệu mặc định
    filterCompany = Layout.User.company_id;

    companys = await DbHrmOption.GetList(Layout.Company.id, "company");
    departments = await DbHrmOption.GetList(Layout.Company.id, "department");
    shiftList = await DbHrmWorkShift.GetList(Layout.Company.id);

    await GetList();
  }

  private async Task GetList()
  {
    userList = new();
    if(HrmService.CheckRole(Layout.User, companys, filterCompany))
    {
      dataList = await DbHrmUserShift.GetList(Layout.Company.id);
      foreach (var user in Layout.UserList)
      {
        if(!string.IsNullOrEmpty(filterCompany) && filterCompany != user.company_id)
          continue;
        if(!string.IsNullOrEmpty(filterDepartment) && filterDepartment != user.department_id)
          continue;
        if(!string.IsNullOrEmpty(filterKeyword) && !Shared.SearchKeyword(filterKeyword, user.FullName))
          continue; 
        userList.Add(user);
      }
    }
    else
    {
      await JSRuntime.InvokeVoidAsync("tagline", false, "Bạn không có quyền xem dữ liệu này!");
    }

    userList = userList.OrderBy(x => x.department_id).ToList();
  }

  private async Task ChangeCompany(ChangeEventArgs e)
  {
    filterCompany = e.Value.ToString();
    await GetList();
  }

  private async Task ChangeDepartment(ChangeEventArgs e)
  {
    filterDepartment = e.Value.ToString();
    await GetList();
  }

  private void CheckAll(ChangeEventArgs e)
  {
    if (Convert.ToBoolean(e.Value))
      checkList = userList.Select(x => x.id).ToList();
    else
      checkList = new();
  }

  private void CheckItem(string id)
  {
    if (checkList.Contains(id))
      checkList.Remove(id);
    else
      checkList.Add(id);
  }

  private void EditItem(string userId)
  {
    var userShift = dataList.FirstOrDefault(x => x.id == userId);
    editItem = userShift == null ? new() : userShift;
    checkList = new() { userId };
    editStep = 2;
  }

  private async Task ChangeStep(int step)
  {
    if(step == 0)
    {
      checkList = new();
      editItem = null;
    }
    else if(step == 1)
    {
      editItem = null;
    }
    else if(step == 2)
    {
      if(checkList.Count == 0)
      {
        await JSRuntime.InvokeVoidAsync("tagline", false, "Bạn chưa chọn nhân viên nào!");
        return;
      }
      else
      {
        var userShift = dataList.Where(x => checkList.Contains(x.id)).FirstOrDefault();
        editItem = userShift == null ? new() : userShift;
      }
    }
    editStep = step;
  }

  private async Task OnUpdate(bool isUpdate)
  {
    if(isUpdate)
    {
      foreach (var userId in checkList)
      {
        var userShift = new HrmUserShiftModel()
        {
          id = userId,
          shifts = editItem.shifts,
          is_flexible = editItem.is_flexible
        };
        await DbHrmUserShift.Create(Layout.Company.id, userShift);
      }
      await JSRuntime.InvokeVoidAsync("tagline", true, $"Đã phân ca thành công cho {checkList.Count} tài khoản.");
      await GetList();
      await ChangeStep(0);
    }
    else
      await ChangeStep(1);
  }
}